{
    "contractName": "MyCoin",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name_",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "symbol_",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "commissionAddr_",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_totalNum",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "burn",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "burnFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "num",
            "type": "uint256"
          }
        ],
        "name": "mint",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "burnToken",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"commissionAddr_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalNum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MyCoin.sol\":\"MyCoin\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/MyCoin.sol\":{\"keccak256\":\"0x8f5a5cc8e56c1f74c4bf4f93813ea4910587a4f0278de21bc7ad341dacdb6869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b1c4167fe6a532c4d8ad9f196db603a2035df0c6c33688c5db0bd2e708fa8ea\",\"dweb:/ipfs/QmYDuQJDKLbCexnpTQk8PJkWN1uydSkC34cGP2B3iVhoai\"]}},\"version\":1}",
    "bytecode": "0x60806040523480156200001157600080fd5b506040516200145238038062001452833981016040819052620000349162000308565b8383600362000044838262000442565b50600462000053828262000442565b5050506200008262000073620000c1640100000000026401000000009004565b640100000000620000c5810204565b62000097338264010000000062000117810204565b5060068054600160a060020a031916600160a060020a039290921691909117905550620005559050565b3390565b60058054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600160a060020a0382166200018c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b620001a36000838364010000000062000225810204565b8060026000828254620001b7919062000514565b9091555050600160a060020a038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620002216000838364010000000062000225810204565b5050565b505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126200026b57600080fd5b81516001604060020a03808211156200028857620002886200022a565b604051601f8301601f19908116603f01168101908282118183101715620002b357620002b36200022a565b81604052838152602092508683858801011115620002d057600080fd5b600091505b83821015620002f45785820183015181830184015290820190620002d5565b600093810190920192909252949350505050565b600080600080608085870312156200031f57600080fd5b84516001604060020a03808211156200033757600080fd5b620003458883890162000259565b955060208701519150808211156200035c57600080fd5b506200036b8782880162000259565b60408701519094509050600160a060020a03811681146200038b57600080fd5b6060959095015193969295505050565b600281046001821680620003b057607f821691505b602082108103620003ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111562000225576000818152602081206020601f86010481016020861015620004195750805b6020601f860104820191505b818110156200043a5782815560010162000425565b505050505050565b81516001604060020a038111156200045e576200045e6200022a565b62000476816200046f84546200039b565b84620003f0565b602080601f831160018114620004b25760008415620004955750858301515b60028086026008870290910a60001904198216178655506200043a565b600085815260208120601f198616915b82811015620004e357888601518255948401946001909101908401620004c2565b50858210156200050457878501516008601f88160260020a60001904191681555b5050505050600202600101905550565b808201808211156200054f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b610eed80620005656000396000f3fe608060405234801561001057600080fd5b506004361061013e576000357c01000000000000000000000000000000000000000000000000000000009004806379cc6790116100ca578063a457c2d71161008e578063a457c2d71461026d578063a9059cbb14610280578063beabacc814610293578063dd62ed3e146102a6578063f2fde38b146102b957600080fd5b806379cc6790146102115780637b47ec1a146102245780638da5cb5b1461023757806395d89b4114610252578063a0712d681461025a57600080fd5b8063313ce56711610111578063313ce567146101a957806339509351146101b857806342966c68146101cb57806370a08231146101e0578063715018a61461020957600080fd5b806306fdde0314610143578063095ea7b31461016157806318160ddd1461018457806323b872dd14610196575b600080fd5b61014b6102cc565b6040516101589190610c96565b60405180910390f35b61017461016f366004610d00565b61035e565b6040519015158152602001610158565b6002545b604051908152602001610158565b6101746101a4366004610d2a565b610378565b60405160128152602001610158565b6101746101c6366004610d00565b61039c565b6101de6101d9366004610d66565b6103be565b005b6101886101ee366004610d7f565b600160a060020a031660009081526020819052604090205490565b6101de6103cb565b6101de61021f366004610d00565b6103df565b6101de610232366004610d66565b6103f8565b600554604051600160a060020a039091168152602001610158565b61014b610401565b6101de610268366004610d66565b610410565b61017461027b366004610d00565b610422565b61017461028e366004610d00565b6104bd565b6101de6102a1366004610d2a565b6104cb565b6101886102b4366004610da1565b61052a565b6101de6102c7366004610d7f565b610555565b6060600380546102db90610dd4565b80601f016020809104026020016040519081016040528092919081815260200182805461030790610dd4565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b60003361036c8185856105e5565b60019150505b92915050565b600033610386858285610744565b6103918585856107bb565b506001949350505050565b60003361036c8185856103af838361052a565b6103b99190610e56565b6105e5565b6103c833826109b1565b50565b6103d3610b18565b6103dd6000610b75565b565b6103ea823383610744565b6103f482826109b1565b5050565b6103c8816103be565b6060600480546102db90610dd4565b610418610b18565b6103c83382610bd4565b60003381610430828661052a565b9050838110156104b05760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61039182868684036105e5565b60003361036c8185856107bb565b60006104d860c883610e69565b90506104e86101d9600283610e69565b60065461050a908590600160a060020a0316610505600285610e69565b6107bb565b610524848461051a600285610e69565b6105059086610ea4565b50505050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b61055d610b18565b600160a060020a0381166105dc5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104a7565b6103c881610b75565b600160a060020a0383166106635760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0382166106e25760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610750848461052a565b9050600019811461052457818110156107ae5760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b61052484848484036105e5565b600160a060020a03831661083a5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0382166108b95760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0383166000908152602081905260409020548181101561094b5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610524565b600160a060020a038216610a305760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a03821660009081526020819052604090205481811015610ac25760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610737565b600554600160a060020a031633146103dd5760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a7565b60058054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600160a060020a038216610c2d5760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610c3f9190610e56565b9091555050600160a060020a038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610cc357858101830151858201604001528201610ca7565b506000604082860101526040601f19601f8301168501019250505092915050565b8035600160a060020a0381168114610cfb57600080fd5b919050565b60008060408385031215610d1357600080fd5b610d1c83610ce4565b946020939093013593505050565b600080600060608486031215610d3f57600080fd5b610d4884610ce4565b9250610d5660208501610ce4565b9150604084013590509250925092565b600060208284031215610d7857600080fd5b5035919050565b600060208284031215610d9157600080fd5b610d9a82610ce4565b9392505050565b60008060408385031215610db457600080fd5b610dbd83610ce4565b9150610dcb60208401610ce4565b90509250929050565b600281046001821680610de857607f821691505b602082108103610e21577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561037257610372610e27565b600082610e9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561037257610372610e2756fea26469706673582212201590f558272349c910b63063ae5e9b0c9659cf1f1afa7543aedf2f7715a7ae9264736f6c63430008130033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061013e576000357c01000000000000000000000000000000000000000000000000000000009004806379cc6790116100ca578063a457c2d71161008e578063a457c2d71461026d578063a9059cbb14610280578063beabacc814610293578063dd62ed3e146102a6578063f2fde38b146102b957600080fd5b806379cc6790146102115780637b47ec1a146102245780638da5cb5b1461023757806395d89b4114610252578063a0712d681461025a57600080fd5b8063313ce56711610111578063313ce567146101a957806339509351146101b857806342966c68146101cb57806370a08231146101e0578063715018a61461020957600080fd5b806306fdde0314610143578063095ea7b31461016157806318160ddd1461018457806323b872dd14610196575b600080fd5b61014b6102cc565b6040516101589190610c96565b60405180910390f35b61017461016f366004610d00565b61035e565b6040519015158152602001610158565b6002545b604051908152602001610158565b6101746101a4366004610d2a565b610378565b60405160128152602001610158565b6101746101c6366004610d00565b61039c565b6101de6101d9366004610d66565b6103be565b005b6101886101ee366004610d7f565b600160a060020a031660009081526020819052604090205490565b6101de6103cb565b6101de61021f366004610d00565b6103df565b6101de610232366004610d66565b6103f8565b600554604051600160a060020a039091168152602001610158565b61014b610401565b6101de610268366004610d66565b610410565b61017461027b366004610d00565b610422565b61017461028e366004610d00565b6104bd565b6101de6102a1366004610d2a565b6104cb565b6101886102b4366004610da1565b61052a565b6101de6102c7366004610d7f565b610555565b6060600380546102db90610dd4565b80601f016020809104026020016040519081016040528092919081815260200182805461030790610dd4565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b60003361036c8185856105e5565b60019150505b92915050565b600033610386858285610744565b6103918585856107bb565b506001949350505050565b60003361036c8185856103af838361052a565b6103b99190610e56565b6105e5565b6103c833826109b1565b50565b6103d3610b18565b6103dd6000610b75565b565b6103ea823383610744565b6103f482826109b1565b5050565b6103c8816103be565b6060600480546102db90610dd4565b610418610b18565b6103c83382610bd4565b60003381610430828661052a565b9050838110156104b05760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61039182868684036105e5565b60003361036c8185856107bb565b60006104d860c883610e69565b90506104e86101d9600283610e69565b60065461050a908590600160a060020a0316610505600285610e69565b6107bb565b610524848461051a600285610e69565b6105059086610ea4565b50505050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b61055d610b18565b600160a060020a0381166105dc5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104a7565b6103c881610b75565b600160a060020a0383166106635760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0382166106e25760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610750848461052a565b9050600019811461052457818110156107ae5760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a7565b61052484848484036105e5565b600160a060020a03831661083a5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0382166108b95760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0383166000908152602081905260409020548181101561094b5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610524565b600160a060020a038216610a305760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a03821660009081526020819052604090205481811015610ac25760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104a7565b600160a060020a0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610737565b600554600160a060020a031633146103dd5760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a7565b60058054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600160a060020a038216610c2d5760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a7565b8060026000828254610c3f9190610e56565b9091555050600160a060020a038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610cc357858101830151858201604001528201610ca7565b506000604082860101526040601f19601f8301168501019250505092915050565b8035600160a060020a0381168114610cfb57600080fd5b919050565b60008060408385031215610d1357600080fd5b610d1c83610ce4565b946020939093013593505050565b600080600060608486031215610d3f57600080fd5b610d4884610ce4565b9250610d5660208501610ce4565b9150604084013590509250925092565b600060208284031215610d7857600080fd5b5035919050565b600060208284031215610d9157600080fd5b610d9a82610ce4565b9392505050565b60008060408385031215610db457600080fd5b610dbd83610ce4565b9150610dcb60208401610ce4565b90509250929050565b600281046001821680610de857607f821691505b602082108103610e21577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561037257610372610e27565b600082610e9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561037257610372610e2756fea26469706673582212201590f558272349c910b63063ae5e9b0c9659cf1f1afa7543aedf2f7715a7ae9264736f6c63430008130033",
    "immutableReferences": {},
    "generatedSources": [
      {
        "ast": {
          "nodeType": "YulBlock",
          "src": "0:5334:1",
          "statements": [
            {
              "nodeType": "YulBlock",
              "src": "6:3:1",
              "statements": []
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "46:152:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "63:1:1",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "66:77:1",
                          "type": "",
                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "56:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "56:88:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "56:88:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "160:1:1",
                          "type": "",
                          "value": "4"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "163:4:1",
                          "type": "",
                          "value": "0x41"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "153:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "153:15:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "153:15:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "184:1:1",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "187:4:1",
                          "type": "",
                          "value": "0x24"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "177:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "177:15:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "177:15:1"
                  }
                ]
              },
              "name": "panic_error_0x41",
              "nodeType": "YulFunctionDefinition",
              "src": "14:184:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "267:776:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "316:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "325:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "328:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "318:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "318:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "318:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "295:6:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "303:4:1",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "291:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "291:17:1"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "310:3:1"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "287:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "287:27:1"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "280:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "280:35:1"
                    },
                    "nodeType": "YulIf",
                    "src": "277:55:1"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "341:23:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "357:6:1"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "351:5:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "351:13:1"
                    },
                    "variables": [
                      {
                        "name": "_1",
                        "nodeType": "YulTypedName",
                        "src": "345:2:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "373:28:1",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "383:18:1",
                      "type": "",
                      "value": "0xffffffffffffffff"
                    },
                    "variables": [
                      {
                        "name": "_2",
                        "nodeType": "YulTypedName",
                        "src": "377:2:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "424:22:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x41",
                              "nodeType": "YulIdentifier",
                              "src": "426:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "426:18:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "426:18:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "_1",
                          "nodeType": "YulIdentifier",
                          "src": "416:2:1"
                        },
                        {
                          "name": "_2",
                          "nodeType": "YulIdentifier",
                          "src": "420:2:1"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "413:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "413:10:1"
                    },
                    "nodeType": "YulIf",
                    "src": "410:36:1"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "455:17:1",
                    "value": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "469:2:1",
                          "type": "",
                          "value": "31"
                        }
                      ],
                      "functionName": {
                        "name": "not",
                        "nodeType": "YulIdentifier",
                        "src": "465:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "465:7:1"
                    },
                    "variables": [
                      {
                        "name": "_3",
                        "nodeType": "YulTypedName",
                        "src": "459:2:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "481:23:1",
                    "value": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "501:2:1",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "495:5:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "495:9:1"
                    },
                    "variables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "485:6:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "513:71:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulIdentifier",
                          "src": "535:6:1"
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "559:2:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "563:4:1",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "555:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "555:13:1"
                                    },
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "570:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "551:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "551:22:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "575:2:1",
                                  "type": "",
                                  "value": "63"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "547:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "547:31:1"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "580:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "543:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "543:40:1"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "531:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "531:53:1"
                    },
                    "variables": [
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulTypedName",
                        "src": "517:10:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "643:22:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x41",
                              "nodeType": "YulIdentifier",
                              "src": "645:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "645:18:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "645:18:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "602:10:1"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "614:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "599:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "599:18:1"
                        },
                        {
                          "arguments": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "622:10:1"
                            },
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "634:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "619:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "619:22:1"
                        }
                      ],
                      "functionName": {
                        "name": "or",
                        "nodeType": "YulIdentifier",
                        "src": "596:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "596:46:1"
                    },
                    "nodeType": "YulIf",
                    "src": "593:72:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "681:2:1",
                          "type": "",
                          "value": "64"
                        },
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulIdentifier",
                          "src": "685:10:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "674:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "674:22:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "674:22:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulIdentifier",
                          "src": "712:6:1"
                        },
                        {
                          "name": "_1",
                          "nodeType": "YulIdentifier",
                          "src": "720:2:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "705:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "705:18:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "705:18:1"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "732:14:1",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "742:4:1",
                      "type": "",
                      "value": "0x20"
                    },
                    "variables": [
                      {
                        "name": "_4",
                        "nodeType": "YulTypedName",
                        "src": "736:2:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "792:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "801:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "804:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "794:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "794:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "794:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "769:6:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "777:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "765:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "765:15:1"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "782:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "761:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "761:24:1"
                        },
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "787:3:1"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "758:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "758:33:1"
                    },
                    "nodeType": "YulIf",
                    "src": "755:53:1"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "817:10:1",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "826:1:1",
                      "type": "",
                      "value": "0"
                    },
                    "variables": [
                      {
                        "name": "i",
                        "nodeType": "YulTypedName",
                        "src": "821:1:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "882:87:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "911:6:1"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "919:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "907:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "907:14:1"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "923:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "903:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "903:23:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "942:6:1"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "950:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "938:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "938:14:1"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "954:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "934:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "934:23:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "928:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "928:30:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "896:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "896:63:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "896:63:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "i",
                          "nodeType": "YulIdentifier",
                          "src": "847:1:1"
                        },
                        {
                          "name": "_1",
                          "nodeType": "YulIdentifier",
                          "src": "850:2:1"
                        }
                      ],
                      "functionName": {
                        "name": "lt",
                        "nodeType": "YulIdentifier",
                        "src": "844:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "844:9:1"
                    },
                    "nodeType": "YulForLoop",
                    "post": {
                      "nodeType": "YulBlock",
                      "src": "854:19:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "856:15:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "865:1:1"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "868:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "861:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "861:10:1"
                          },
                          "variableNames": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "856:1:1"
                            }
                          ]
                        }
                      ]
                    },
                    "pre": {
                      "nodeType": "YulBlock",
                      "src": "840:3:1",
                      "statements": []
                    },
                    "src": "836:133:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "993:6:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1001:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "989:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "989:15:1"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "1006:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "985:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "985:24:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1011:1:1",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "978:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "978:35:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "978:35:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1022:15:1",
                    "value": {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1031:6:1"
                    },
                    "variableNames": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1022:5:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_string_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "241:6:1",
                  "type": ""
                },
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "249:3:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "array",
                  "nodeType": "YulTypedName",
                  "src": "257:5:1",
                  "type": ""
                }
              ],
              "src": "203:840:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1200:639:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1247:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1256:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1259:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1249:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1249:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1249:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1221:7:1"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1230:9:1"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "1217:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1217:23:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1242:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "1213:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1213:33:1"
                    },
                    "nodeType": "YulIf",
                    "src": "1210:53:1"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1272:30:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1292:9:1"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "1286:5:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1286:16:1"
                    },
                    "variables": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1276:6:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1311:28:1",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "1321:18:1",
                      "type": "",
                      "value": "0xffffffffffffffff"
                    },
                    "variables": [
                      {
                        "name": "_1",
                        "nodeType": "YulTypedName",
                        "src": "1315:2:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1366:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1375:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1378:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1368:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1368:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1368:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "1354:6:1"
                        },
                        {
                          "name": "_1",
                          "nodeType": "YulIdentifier",
                          "src": "1362:2:1"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "1351:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1351:14:1"
                    },
                    "nodeType": "YulIf",
                    "src": "1348:34:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1391:71:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1434:9:1"
                            },
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "1445:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1430:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1430:22:1"
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulIdentifier",
                          "src": "1454:7:1"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_string_fromMemory",
                        "nodeType": "YulIdentifier",
                        "src": "1401:28:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1401:61:1"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1391:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1471:41:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1497:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1508:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1493:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1493:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "1487:5:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1487:25:1"
                    },
                    "variables": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulTypedName",
                        "src": "1475:8:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1541:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1550:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1553:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1543:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1543:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1543:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "offset_1",
                          "nodeType": "YulIdentifier",
                          "src": "1527:8:1"
                        },
                        {
                          "name": "_1",
                          "nodeType": "YulIdentifier",
                          "src": "1537:2:1"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "1524:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1524:16:1"
                    },
                    "nodeType": "YulIf",
                    "src": "1521:36:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1566:73:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1609:9:1"
                            },
                            {
                              "name": "offset_1",
                              "nodeType": "YulIdentifier",
                              "src": "1620:8:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1605:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1605:24:1"
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulIdentifier",
                          "src": "1631:7:1"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_string_fromMemory",
                        "nodeType": "YulIdentifier",
                        "src": "1576:28:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1576:63:1"
                    },
                    "variableNames": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1566:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1648:38:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1671:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1682:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1667:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1667:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "1661:5:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1661:25:1"
                    },
                    "variables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1652:5:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1749:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1758:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1761:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1751:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1751:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1751:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1708:5:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1719:5:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1734:1:1",
                                          "type": "",
                                          "value": "2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1737:3:1",
                                          "type": "",
                                          "value": "160"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "1730:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1730:11:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1743:1:1",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1726:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1726:19:1"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1715:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1715:31:1"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1705:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1705:42:1"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "1698:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1698:50:1"
                    },
                    "nodeType": "YulIf",
                    "src": "1695:70:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1774:15:1",
                    "value": {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1784:5:1"
                    },
                    "variableNames": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1774:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1798:35:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1818:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1829:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1814:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1814:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "1808:5:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1808:25:1"
                    },
                    "variableNames": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1798:6:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1142:9:1",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "1153:7:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1165:6:1",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "1173:6:1",
                  "type": ""
                },
                {
                  "name": "value2",
                  "nodeType": "YulTypedName",
                  "src": "1181:6:1",
                  "type": ""
                },
                {
                  "name": "value3",
                  "nodeType": "YulTypedName",
                  "src": "1189:6:1",
                  "type": ""
                }
              ],
              "src": "1048:791:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1899:382:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "1909:22:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "1923:4:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1929:1:1",
                          "type": "",
                          "value": "2"
                        }
                      ],
                      "functionName": {
                        "name": "div",
                        "nodeType": "YulIdentifier",
                        "src": "1919:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1919:12:1"
                    },
                    "variableNames": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1909:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1940:38:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "1970:4:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1976:1:1",
                          "type": "",
                          "value": "1"
                        }
                      ],
                      "functionName": {
                        "name": "and",
                        "nodeType": "YulIdentifier",
                        "src": "1966:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1966:12:1"
                    },
                    "variables": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulTypedName",
                        "src": "1944:18:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2017:31:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2019:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2033:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2041:4:1",
                                "type": "",
                                "value": "0x7f"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2029:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2029:17:1"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2019:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulIdentifier",
                          "src": "1997:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "1990:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1990:26:1"
                    },
                    "nodeType": "YulIf",
                    "src": "1987:61:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2107:168:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2128:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2131:77:1",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2121:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2121:88:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2121:88:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2229:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2232:4:1",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2222:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2222:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2222:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2257:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2260:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "2250:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2250:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2250:15:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulIdentifier",
                          "src": "2063:18:1"
                        },
                        {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2086:6:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2094:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "2083:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2083:14:1"
                        }
                      ],
                      "functionName": {
                        "name": "eq",
                        "nodeType": "YulIdentifier",
                        "src": "2060:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2060:38:1"
                    },
                    "nodeType": "YulIf",
                    "src": "2057:218:1"
                  }
                ]
              },
              "name": "extract_byte_array_length",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "data",
                  "nodeType": "YulTypedName",
                  "src": "1879:4:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "1888:6:1",
                  "type": ""
                }
              ],
              "src": "1844:437:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2342:65:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2359:1:1",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "name": "ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2362:3:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2352:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2352:14:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2352:14:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2375:26:1",
                    "value": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2393:1:1",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2396:4:1",
                          "type": "",
                          "value": "0x20"
                        }
                      ],
                      "functionName": {
                        "name": "keccak256",
                        "nodeType": "YulIdentifier",
                        "src": "2383:9:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2383:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2375:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "array_dataslot_string_storage",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "ptr",
                  "nodeType": "YulTypedName",
                  "src": "2325:3:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "data",
                  "nodeType": "YulTypedName",
                  "src": "2333:4:1",
                  "type": ""
                }
              ],
              "src": "2286:121:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2493:470:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2526:431:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2540:11:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2550:1:1",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "2544:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2571:2:1"
                              },
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "2575:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2564:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2564:17:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2564:17:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2594:31:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2616:2:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2620:4:1",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "keccak256",
                              "nodeType": "YulIdentifier",
                              "src": "2606:9:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2606:19:1"
                          },
                          "variables": [
                            {
                              "name": "data",
                              "nodeType": "YulTypedName",
                              "src": "2598:4:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2638:60:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "2661:4:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "startIndex",
                                        "nodeType": "YulIdentifier",
                                        "src": "2675:10:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2687:2:1",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2671:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2671:19:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2692:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2667:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2667:30:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2657:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2657:41:1"
                          },
                          "variables": [
                            {
                              "name": "deleteStart",
                              "nodeType": "YulTypedName",
                              "src": "2642:11:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2735:23:1",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "2737:19:1",
                                "value": {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "2752:4:1"
                                },
                                "variableNames": [
                                  {
                                    "name": "deleteStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2737:11:1"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "startIndex",
                                "nodeType": "YulIdentifier",
                                "src": "2717:10:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2729:4:1",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2714:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2714:20:1"
                          },
                          "nodeType": "YulIf",
                          "src": "2711:47:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2771:44:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "2785:4:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "2799:3:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2804:2:1",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2795:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2795:12:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2809:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2791:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2791:23:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2781:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2781:34:1"
                          },
                          "variables": [
                            {
                              "name": "_2",
                              "nodeType": "YulTypedName",
                              "src": "2775:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2828:24:1",
                          "value": {
                            "name": "deleteStart",
                            "nodeType": "YulIdentifier",
                            "src": "2841:11:1"
                          },
                          "variables": [
                            {
                              "name": "start",
                              "nodeType": "YulTypedName",
                              "src": "2832:5:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2926:21:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "2935:5:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2942:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "2928:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2928:17:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2928:17:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "start",
                                "nodeType": "YulIdentifier",
                                "src": "2876:5:1"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2883:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2873:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2873:13:1"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "2887:26:1",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "2889:22:1",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "2902:5:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2909:1:1",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2898:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2898:13:1"
                                },
                                "variableNames": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "2889:5:1"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "2869:3:1",
                            "statements": []
                          },
                          "src": "2865:82:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "len",
                          "nodeType": "YulIdentifier",
                          "src": "2509:3:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2514:2:1",
                          "type": "",
                          "value": "31"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "2506:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2506:11:1"
                    },
                    "nodeType": "YulIf",
                    "src": "2503:454:1"
                  }
                ]
              },
              "name": "clean_up_bytearray_end_slots_string_storage",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "array",
                  "nodeType": "YulTypedName",
                  "src": "2465:5:1",
                  "type": ""
                },
                {
                  "name": "len",
                  "nodeType": "YulTypedName",
                  "src": "2472:3:1",
                  "type": ""
                },
                {
                  "name": "startIndex",
                  "nodeType": "YulTypedName",
                  "src": "2477:10:1",
                  "type": ""
                }
              ],
              "src": "2412:551:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3053:89:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "3063:73:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "3078:4:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3096:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "3092:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3092:6:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3104:1:1",
                                          "type": "",
                                          "value": "2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3111:1:1",
                                              "type": "",
                                              "value": "8"
                                            },
                                            {
                                              "name": "len",
                                              "nodeType": "YulIdentifier",
                                              "src": "3114:3:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "3107:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3107:11:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "3100:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3100:19:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "div",
                                    "nodeType": "YulIdentifier",
                                    "src": "3088:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3088:32:1"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "3084:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3084:37:1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3074:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3074:48:1"
                        },
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3128:1:1",
                              "type": "",
                              "value": "2"
                            },
                            {
                              "name": "len",
                              "nodeType": "YulIdentifier",
                              "src": "3131:3:1"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "3124:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3124:11:1"
                        }
                      ],
                      "functionName": {
                        "name": "or",
                        "nodeType": "YulIdentifier",
                        "src": "3071:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3071:65:1"
                    },
                    "variableNames": [
                      {
                        "name": "used",
                        "nodeType": "YulIdentifier",
                        "src": "3063:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "extract_used_part_and_set_length_of_short_byte_array",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "data",
                  "nodeType": "YulTypedName",
                  "src": "3030:4:1",
                  "type": ""
                },
                {
                  "name": "len",
                  "nodeType": "YulTypedName",
                  "src": "3036:3:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "used",
                  "nodeType": "YulTypedName",
                  "src": "3044:4:1",
                  "type": ""
                }
              ],
              "src": "2968:174:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3243:1263:1",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "3253:24:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "src",
                          "nodeType": "YulIdentifier",
                          "src": "3273:3:1"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "3267:5:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3267:10:1"
                    },
                    "variables": [
                      {
                        "name": "newLen",
                        "nodeType": "YulTypedName",
                        "src": "3257:6:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3320:22:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x41",
                              "nodeType": "YulIdentifier",
                              "src": "3322:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3322:18:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3322:18:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "newLen",
                          "nodeType": "YulIdentifier",
                          "src": "3292:6:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3300:18:1",
                          "type": "",
                          "value": "0xffffffffffffffff"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "3289:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3289:30:1"
                    },
                    "nodeType": "YulIf",
                    "src": "3286:56:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "slot",
                          "nodeType": "YulIdentifier",
                          "src": "3395:4:1"
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3433:4:1"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "3427:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3427:11:1"
                            }
                          ],
                          "functionName": {
                            "name": "extract_byte_array_length",
                            "nodeType": "YulIdentifier",
                            "src": "3401:25:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3401:38:1"
                        },
                        {
                          "name": "newLen",
                          "nodeType": "YulIdentifier",
                          "src": "3441:6:1"
                        }
                      ],
                      "functionName": {
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nodeType": "YulIdentifier",
                        "src": "3351:43:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3351:97:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3351:97:1"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "3457:18:1",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "3474:1:1",
                      "type": "",
                      "value": "0"
                    },
                    "variables": [
                      {
                        "name": "srcOffset",
                        "nodeType": "YulTypedName",
                        "src": "3461:9:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "3484:23:1",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "3503:4:1",
                      "type": "",
                      "value": "0x20"
                    },
                    "variables": [
                      {
                        "name": "srcOffset_1",
                        "nodeType": "YulTypedName",
                        "src": "3488:11:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "3516:24:1",
                    "value": {
                      "name": "srcOffset_1",
                      "nodeType": "YulIdentifier",
                      "src": "3529:11:1"
                    },
                    "variableNames": [
                      {
                        "name": "srcOffset",
                        "nodeType": "YulIdentifier",
                        "src": "3516:9:1"
                      }
                    ]
                  },
                  {
                    "cases": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3586:663:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3600:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "3619:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3631:2:1",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3627:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3627:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3615:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3615:20:1"
                              },
                              "variables": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "3604:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3648:49:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "3692:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "3662:29:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3662:35:1"
                              },
                              "variables": [
                                {
                                  "name": "dstPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3652:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3710:10:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3719:1:1",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "3714:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3797:172:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dstPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3822:6:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3840:3:1"
                                                },
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3845:9:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3836:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3836:19:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "3830:5:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3830:26:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3815:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3815:42:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3815:42:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3874:24:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dstPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3888:6:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3896:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3884:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3884:14:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3874:6:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3915:40:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "3932:9:1"
                                        },
                                        {
                                          "name": "srcOffset_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3943:11:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3928:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3928:27:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3915:9:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3744:1:1"
                                  },
                                  {
                                    "name": "loopEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3747:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3741:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3741:14:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "3756:28:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3758:24:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3767:1:1"
                                        },
                                        {
                                          "name": "srcOffset_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3770:11:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3763:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3763:19:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "3758:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "3737:3:1",
                                "statements": []
                              },
                              "src": "3733:236:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4017:173:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4035:43:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "4062:3:1"
                                            },
                                            {
                                              "name": "srcOffset",
                                              "nodeType": "YulIdentifier",
                                              "src": "4067:9:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4058:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4058:19:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "4052:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4052:26:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "lastValue",
                                        "nodeType": "YulTypedName",
                                        "src": "4039:9:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dstPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "4102:6:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "lastValue",
                                              "nodeType": "YulIdentifier",
                                              "src": "4114:9:1"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "4137:1:1",
                                                          "type": "",
                                                          "value": "0"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "not",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4133:3:1"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "4133:6:1"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "4145:1:1",
                                                          "type": "",
                                                          "value": "2"
                                                        },
                                                        {
                                                          "arguments": [
                                                            {
                                                              "kind": "number",
                                                              "nodeType": "YulLiteral",
                                                              "src": "4152:1:1",
                                                              "type": "",
                                                              "value": "8"
                                                            },
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "name": "newLen",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4159:6:1"
                                                                },
                                                                {
                                                                  "kind": "number",
                                                                  "nodeType": "YulLiteral",
                                                                  "src": "4167:2:1",
                                                                  "type": "",
                                                                  "value": "31"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "and",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4155:3:1"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "4155:15:1"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "mul",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4148:3:1"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "4148:23:1"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "exp",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4141:3:1"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "4141:31:1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "div",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4129:3:1"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "4129:44:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "4125:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4125:49:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "4110:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4110:65:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4095:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4095:81:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4095:81:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "loopEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3988:7:1"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "3997:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3985:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3985:19:1"
                              },
                              "nodeType": "YulIf",
                              "src": "3982:208:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "4210:4:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "newLen",
                                            "nodeType": "YulIdentifier",
                                            "src": "4224:6:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4232:1:1",
                                            "type": "",
                                            "value": "2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "4220:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4220:14:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4236:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4216:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4216:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4203:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4203:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4203:36:1"
                            }
                          ]
                        },
                        "nodeType": "YulCase",
                        "src": "3579:670:1",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3584:1:1",
                          "type": "",
                          "value": "1"
                        }
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4266:234:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4280:14:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4293:1:1",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "4284:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4329:67:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4347:35:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "4366:3:1"
                                            },
                                            {
                                              "name": "srcOffset",
                                              "nodeType": "YulIdentifier",
                                              "src": "4371:9:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4362:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4362:19:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "4356:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4356:26:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4347:5:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "name": "newLen",
                                "nodeType": "YulIdentifier",
                                "src": "4310:6:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4307:89:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "4416:4:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4475:5:1"
                                      },
                                      {
                                        "name": "newLen",
                                        "nodeType": "YulIdentifier",
                                        "src": "4482:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_used_part_and_set_length_of_short_byte_array",
                                      "nodeType": "YulIdentifier",
                                      "src": "4422:52:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4422:67:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4409:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4409:81:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4409:81:1"
                            }
                          ]
                        },
                        "nodeType": "YulCase",
                        "src": "4258:242:1",
                        "value": "default"
                      }
                    ],
                    "expression": {
                      "arguments": [
                        {
                          "name": "newLen",
                          "nodeType": "YulIdentifier",
                          "src": "3559:6:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3567:2:1",
                          "type": "",
                          "value": "31"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "3556:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3556:14:1"
                    },
                    "nodeType": "YulSwitch",
                    "src": "3549:951:1"
                  }
                ]
              },
              "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "slot",
                  "nodeType": "YulTypedName",
                  "src": "3228:4:1",
                  "type": ""
                },
                {
                  "name": "src",
                  "nodeType": "YulTypedName",
                  "src": "3234:3:1",
                  "type": ""
                }
              ],
              "src": "3147:1359:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4685:181:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "4702:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4713:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4695:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4695:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4695:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "4736:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4747:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4732:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4732:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4752:2:1",
                          "type": "",
                          "value": "31"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4725:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4725:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4725:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "4775:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4786:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4771:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4771:18:1"
                        },
                        {
                          "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "4791:33:1",
                          "type": "",
                          "value": "ERC20: mint to the zero address"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4764:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4764:61:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4764:61:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "4834:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "4846:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4857:2:1",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "4842:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4842:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4834:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "4662:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "4676:4:1",
                  "type": ""
                }
              ],
              "src": "4511:355:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4919:231:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "4929:16:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "4940:1:1"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "4943:1:1"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "4936:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4936:9:1"
                    },
                    "variableNames": [
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "4929:3:1"
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4976:168:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4997:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5000:77:1",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4990:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4990:88:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4990:88:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5098:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5101:4:1",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5091:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5091:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5091:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5126:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5129:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "5119:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5119:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5119:15:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "4960:1:1"
                        },
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "4963:3:1"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "4957:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4957:10:1"
                    },
                    "nodeType": "YulIf",
                    "src": "4954:190:1"
                  }
                ]
              },
              "name": "checked_add_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "4902:1:1",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "4905:1:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "sum",
                  "nodeType": "YulTypedName",
                  "src": "4911:3:1",
                  "type": ""
                }
              ],
              "src": "4871:279:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5256:76:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "5266:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5278:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5289:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5274:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5274:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5266:4:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5308:9:1"
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5319:6:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5301:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5301:25:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5301:25:1"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "5225:9:1",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "5236:6:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "5247:4:1",
                  "type": ""
                }
              ],
              "src": "5155:177:1"
            }
          ]
        },
        "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, div(add(startIndex, 31), 0x20))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, div(add(len, 31), 0x20))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(div(not(0), exp(2, mul(8, len))))), mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(div(not(0), exp(2, mul(8, and(newLen, 31)))))))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
        "id": 1,
        "language": "Yul",
        "name": "#utility.yul"
      }
    ],
    "deployedGeneratedSources": [
      {
        "ast": {
          "nodeType": "YulBlock",
          "src": "0:8687:1",
          "statements": [
            {
              "nodeType": "YulBlock",
              "src": "6:3:1",
              "statements": []
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "135:427:1",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "145:12:1",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "155:2:1",
                      "type": "",
                      "value": "32"
                    },
                    "variables": [
                      {
                        "name": "_1",
                        "nodeType": "YulTypedName",
                        "src": "149:2:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "173:9:1"
                        },
                        {
                          "name": "_1",
                          "nodeType": "YulIdentifier",
                          "src": "184:2:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "166:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "166:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "166:21:1"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "196:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "216:6:1"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "210:5:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "210:13:1"
                    },
                    "variables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "200:6:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "243:9:1"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "254:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "239:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "239:18:1"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "259:6:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "232:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "232:34:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "232:34:1"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "275:10:1",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "284:1:1",
                      "type": "",
                      "value": "0"
                    },
                    "variables": [
                      {
                        "name": "i",
                        "nodeType": "YulTypedName",
                        "src": "279:1:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "344:90:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "373:9:1"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "384:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "369:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "369:17:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "388:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "365:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "365:26:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "407:6:1"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "415:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "403:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "403:14:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "419:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "399:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "399:23:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "393:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "393:30:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "358:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "358:66:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "358:66:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "i",
                          "nodeType": "YulIdentifier",
                          "src": "305:1:1"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "308:6:1"
                        }
                      ],
                      "functionName": {
                        "name": "lt",
                        "nodeType": "YulIdentifier",
                        "src": "302:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "302:13:1"
                    },
                    "nodeType": "YulForLoop",
                    "post": {
                      "nodeType": "YulBlock",
                      "src": "316:19:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "318:15:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "327:1:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "330:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "323:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "323:10:1"
                          },
                          "variableNames": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "318:1:1"
                            }
                          ]
                        }
                      ]
                    },
                    "pre": {
                      "nodeType": "YulBlock",
                      "src": "298:3:1",
                      "statements": []
                    },
                    "src": "294:140:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "458:9:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "469:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "454:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "454:22:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "478:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "450:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "450:31:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "483:1:1",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "443:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "443:42:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "443:42:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "494:62:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "510:9:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "529:6:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "537:2:1",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "525:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "525:15:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "546:2:1",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "542:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "521:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "521:29:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "506:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "506:45:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "553:2:1",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "502:54:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "494:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "104:9:1",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "115:6:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "126:4:1",
                  "type": ""
                }
              ],
              "src": "14:548:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "616:147:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "626:29:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "648:6:1"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "635:12:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "635:20:1"
                    },
                    "variableNames": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "626:5:1"
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "741:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "750:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "753:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "743:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "743:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "743:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "677:5:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "688:5:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "695:42:1",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "684:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "684:54:1"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "674:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "674:65:1"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "667:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "667:73:1"
                    },
                    "nodeType": "YulIf",
                    "src": "664:93:1"
                  }
                ]
              },
              "name": "abi_decode_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "595:6:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "606:5:1",
                  "type": ""
                }
              ],
              "src": "567:196:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "855:167:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "901:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "913:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "903:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "903:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "903:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "876:7:1"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "885:9:1"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "872:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "872:23:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "897:2:1",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "868:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "868:32:1"
                    },
                    "nodeType": "YulIf",
                    "src": "865:52:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "926:39:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "955:9:1"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "936:18:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "936:29:1"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "926:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "974:42:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1001:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1012:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "997:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "997:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "984:12:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "984:32:1"
                    },
                    "variableNames": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "974:6:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_addresst_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "813:9:1",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "824:7:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "836:6:1",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "844:6:1",
                  "type": ""
                }
              ],
              "src": "768:254:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1122:92:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "1132:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1144:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1155:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "1140:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1140:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1132:4:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1174:9:1"
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1199:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "1192:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1192:14:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1185:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1185:22:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1167:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1167:41:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1167:41:1"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1091:9:1",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1102:6:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "1113:4:1",
                  "type": ""
                }
              ],
              "src": "1027:187:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1320:76:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "1330:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1342:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1353:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "1338:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1338:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1330:4:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1372:9:1"
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1383:6:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1365:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1365:25:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1365:25:1"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1289:9:1",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1300:6:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "1311:4:1",
                  "type": ""
                }
              ],
              "src": "1219:177:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1505:224:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1551:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1560:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1563:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1553:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1553:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1553:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1526:7:1"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1535:9:1"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "1522:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1522:23:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1547:2:1",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "1518:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1518:32:1"
                    },
                    "nodeType": "YulIf",
                    "src": "1515:52:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1576:39:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1605:9:1"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "1586:18:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1586:29:1"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1576:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1624:48:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1657:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1668:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1653:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1653:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "1634:18:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1634:38:1"
                    },
                    "variableNames": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1624:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1681:42:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1708:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1719:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1704:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1704:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "1691:12:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1691:32:1"
                    },
                    "variableNames": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1681:6:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_addresst_addresst_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1455:9:1",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "1466:7:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1478:6:1",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "1486:6:1",
                  "type": ""
                },
                {
                  "name": "value2",
                  "nodeType": "YulTypedName",
                  "src": "1494:6:1",
                  "type": ""
                }
              ],
              "src": "1401:328:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1831:87:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "1841:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1853:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1864:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "1849:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1849:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1841:4:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1883:9:1"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1898:6:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1906:4:1",
                              "type": "",
                              "value": "0xff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1894:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1894:17:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1876:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1876:36:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1876:36:1"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1800:9:1",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1811:6:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "1822:4:1",
                  "type": ""
                }
              ],
              "src": "1734:184:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1993:110:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2039:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2048:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2051:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "2041:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2041:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2041:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "2014:7:1"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2023:9:1"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2010:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2010:23:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2035:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "2006:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2006:32:1"
                    },
                    "nodeType": "YulIf",
                    "src": "2003:52:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2064:33:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2087:9:1"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "2074:12:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2074:23:1"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2064:6:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1959:9:1",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "1970:7:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1982:6:1",
                  "type": ""
                }
              ],
              "src": "1923:180:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2178:116:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2224:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2233:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2236:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "2226:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2226:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2226:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "2199:7:1"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2208:9:1"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2195:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2195:23:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2220:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "2191:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2191:32:1"
                    },
                    "nodeType": "YulIf",
                    "src": "2188:52:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2249:39:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2278:9:1"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "2259:18:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2259:29:1"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2249:6:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "2144:9:1",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "2155:7:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "2167:6:1",
                  "type": ""
                }
              ],
              "src": "2108:186:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2400:125:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "2410:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2422:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2433:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "2418:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2418:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2410:4:1"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2452:9:1"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2467:6:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2475:42:1",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2463:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2463:55:1"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2445:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2445:74:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2445:74:1"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "2369:9:1",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "2380:6:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "2391:4:1",
                  "type": ""
                }
              ],
              "src": "2299:226:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2617:173:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2663:16:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2672:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2675:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "2665:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2665:12:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2665:12:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "2638:7:1"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2647:9:1"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2634:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2634:23:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2659:2:1",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "2630:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2630:32:1"
                    },
                    "nodeType": "YulIf",
                    "src": "2627:52:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2688:39:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2717:9:1"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "2698:18:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2698:29:1"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2688:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2736:48:1",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2769:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2780:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2765:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2765:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "2746:18:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2746:38:1"
                    },
                    "variableNames": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2736:6:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_addresst_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "2575:9:1",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "2586:7:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "2598:6:1",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "2606:6:1",
                  "type": ""
                }
              ],
              "src": "2530:260:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2850:382:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "2860:22:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "2874:4:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2880:1:1",
                          "type": "",
                          "value": "2"
                        }
                      ],
                      "functionName": {
                        "name": "div",
                        "nodeType": "YulIdentifier",
                        "src": "2870:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2870:12:1"
                    },
                    "variableNames": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2860:6:1"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "2891:38:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "2921:4:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2927:1:1",
                          "type": "",
                          "value": "1"
                        }
                      ],
                      "functionName": {
                        "name": "and",
                        "nodeType": "YulIdentifier",
                        "src": "2917:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2917:12:1"
                    },
                    "variables": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulTypedName",
                        "src": "2895:18:1",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2968:31:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2970:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2984:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2992:4:1",
                                "type": "",
                                "value": "0x7f"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2980:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2980:17:1"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2970:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulIdentifier",
                          "src": "2948:18:1"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "2941:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2941:26:1"
                    },
                    "nodeType": "YulIf",
                    "src": "2938:61:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3058:168:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3079:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3082:77:1",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3072:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3072:88:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3072:88:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3180:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3183:4:1",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3173:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3173:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3173:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3208:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3211:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "3201:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3201:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3201:15:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulIdentifier",
                          "src": "3014:18:1"
                        },
                        {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3037:6:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3045:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "3034:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3034:14:1"
                        }
                      ],
                      "functionName": {
                        "name": "eq",
                        "nodeType": "YulIdentifier",
                        "src": "3011:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3011:38:1"
                    },
                    "nodeType": "YulIf",
                    "src": "3008:218:1"
                  }
                ]
              },
              "name": "extract_byte_array_length",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "data",
                  "nodeType": "YulTypedName",
                  "src": "2830:4:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "2839:6:1",
                  "type": ""
                }
              ],
              "src": "2795:437:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3269:152:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3286:1:1",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3289:77:1",
                          "type": "",
                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3279:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3279:88:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3279:88:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3383:1:1",
                          "type": "",
                          "value": "4"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3386:4:1",
                          "type": "",
                          "value": "0x11"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3376:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3376:15:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3376:15:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3407:1:1",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3410:4:1",
                          "type": "",
                          "value": "0x24"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "3400:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3400:15:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3400:15:1"
                  }
                ]
              },
              "name": "panic_error_0x11",
              "nodeType": "YulFunctionDefinition",
              "src": "3237:184:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3474:77:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "3484:16:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "3495:1:1"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "3498:1:1"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "3491:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3491:9:1"
                    },
                    "variableNames": [
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "3484:3:1"
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3523:22:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "3525:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3525:18:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3525:18:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "3515:1:1"
                        },
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "3518:3:1"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "3512:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3512:10:1"
                    },
                    "nodeType": "YulIf",
                    "src": "3509:36:1"
                  }
                ]
              },
              "name": "checked_add_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "3457:1:1",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "3460:1:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "sum",
                  "nodeType": "YulTypedName",
                  "src": "3466:3:1",
                  "type": ""
                }
              ],
              "src": "3426:125:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3730:227:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3747:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3758:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3740:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3740:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3740:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3781:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3792:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3777:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3777:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3797:2:1",
                          "type": "",
                          "value": "37"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3770:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3770:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3770:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3820:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3831:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3816:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3816:18:1"
                        },
                        {
                          "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "3836:34:1",
                          "type": "",
                          "value": "ERC20: decreased allowance below"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3809:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3809:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3809:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3891:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3902:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3887:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3887:18:1"
                        },
                        {
                          "hexValue": "207a65726f",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "3907:7:1",
                          "type": "",
                          "value": " zero"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3880:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3880:35:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3880:35:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "3924:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3936:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3947:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "3932:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3932:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3924:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "3707:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "3721:4:1",
                  "type": ""
                }
              ],
              "src": "3556:401:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4008:228:1",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4039:168:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4060:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4063:77:1",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4053:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4053:88:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4053:88:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4161:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4164:4:1",
                                "type": "",
                                "value": "0x12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4154:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4154:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4154:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4189:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4192:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "4182:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4182:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4182:15:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "4028:1:1"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "4021:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4021:9:1"
                    },
                    "nodeType": "YulIf",
                    "src": "4018:189:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "4216:14:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "4225:1:1"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "4228:1:1"
                        }
                      ],
                      "functionName": {
                        "name": "div",
                        "nodeType": "YulIdentifier",
                        "src": "4221:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4221:9:1"
                    },
                    "variableNames": [
                      {
                        "name": "r",
                        "nodeType": "YulIdentifier",
                        "src": "4216:1:1"
                      }
                    ]
                  }
                ]
              },
              "name": "checked_div_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "3993:1:1",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "3996:1:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "r",
                  "nodeType": "YulTypedName",
                  "src": "4002:1:1",
                  "type": ""
                }
              ],
              "src": "3962:274:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4290:79:1",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "4300:17:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "4312:1:1"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "4315:1:1"
                        }
                      ],
                      "functionName": {
                        "name": "sub",
                        "nodeType": "YulIdentifier",
                        "src": "4308:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4308:9:1"
                    },
                    "variableNames": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "4300:4:1"
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4341:22:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "4343:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4343:18:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4343:18:1"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "4332:4:1"
                        },
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "4338:1:1"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "4329:2:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4329:11:1"
                    },
                    "nodeType": "YulIf",
                    "src": "4326:37:1"
                  }
                ]
              },
              "name": "checked_sub_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "4272:1:1",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "4275:1:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "diff",
                  "nodeType": "YulTypedName",
                  "src": "4281:4:1",
                  "type": ""
                }
              ],
              "src": "4241:128:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4548:228:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "4565:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4576:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4558:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4558:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4558:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "4599:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4610:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4595:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4595:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4615:2:1",
                          "type": "",
                          "value": "38"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4588:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4588:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4588:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "4638:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4649:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4634:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4634:18:1"
                        },
                        {
                          "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "4654:34:1",
                          "type": "",
                          "value": "Ownable: new owner is the zero a"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4627:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4627:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4627:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "4709:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4720:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4705:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4705:18:1"
                        },
                        {
                          "hexValue": "646472657373",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "4725:8:1",
                          "type": "",
                          "value": "ddress"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4698:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4698:36:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4698:36:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "4743:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "4755:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4766:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "4751:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4751:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4743:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "4525:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "4539:4:1",
                  "type": ""
                }
              ],
              "src": "4374:402:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4955:226:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "4972:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4983:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4965:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4965:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4965:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5006:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5017:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5002:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5002:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5022:2:1",
                          "type": "",
                          "value": "36"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4995:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4995:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4995:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5045:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5056:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5041:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5041:18:1"
                        },
                        {
                          "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "5061:34:1",
                          "type": "",
                          "value": "ERC20: approve from the zero add"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5034:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5034:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5034:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5116:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5127:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5112:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5112:18:1"
                        },
                        {
                          "hexValue": "72657373",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "5132:6:1",
                          "type": "",
                          "value": "ress"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5105:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5105:34:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5105:34:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "5148:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5160:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5171:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5156:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5156:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5148:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "4932:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "4946:4:1",
                  "type": ""
                }
              ],
              "src": "4781:400:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5360:224:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5377:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5388:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5370:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5370:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5370:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5411:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5422:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5407:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5407:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5427:2:1",
                          "type": "",
                          "value": "34"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5400:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5400:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5400:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5450:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5461:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5446:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5446:18:1"
                        },
                        {
                          "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "5466:34:1",
                          "type": "",
                          "value": "ERC20: approve to the zero addre"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5439:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5439:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5439:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5521:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5532:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5517:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5517:18:1"
                        },
                        {
                          "hexValue": "7373",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "5537:4:1",
                          "type": "",
                          "value": "ss"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5510:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5510:32:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5510:32:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "5551:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5563:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5574:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5559:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5559:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5551:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "5337:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "5351:4:1",
                  "type": ""
                }
              ],
              "src": "5186:398:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5763:179:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5780:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5791:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5773:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5773:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5773:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5814:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5825:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5810:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5810:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5830:2:1",
                          "type": "",
                          "value": "29"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5803:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5803:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5803:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5853:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5864:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5849:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5849:18:1"
                        },
                        {
                          "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "5869:31:1",
                          "type": "",
                          "value": "ERC20: insufficient allowance"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5842:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5842:59:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5842:59:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "5910:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5922:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5933:2:1",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5918:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5918:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5910:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "5740:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "5754:4:1",
                  "type": ""
                }
              ],
              "src": "5589:353:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6121:227:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "6138:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6149:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6131:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6131:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6131:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6172:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6183:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6168:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6168:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6188:2:1",
                          "type": "",
                          "value": "37"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6161:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6161:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6161:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6211:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6222:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6207:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6207:18:1"
                        },
                        {
                          "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "6227:34:1",
                          "type": "",
                          "value": "ERC20: transfer from the zero ad"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6200:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6200:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6200:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6282:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6293:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6278:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6278:18:1"
                        },
                        {
                          "hexValue": "6472657373",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "6298:7:1",
                          "type": "",
                          "value": "dress"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6271:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6271:35:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6271:35:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "6315:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "6327:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6338:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "6323:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6323:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6315:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "6098:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "6112:4:1",
                  "type": ""
                }
              ],
              "src": "5947:401:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6527:225:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "6544:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6555:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6537:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6537:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6537:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6578:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6589:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6574:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6574:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6594:2:1",
                          "type": "",
                          "value": "35"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6567:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6567:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6567:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6617:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6628:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6613:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6613:18:1"
                        },
                        {
                          "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "6633:34:1",
                          "type": "",
                          "value": "ERC20: transfer to the zero addr"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6606:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6606:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6606:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6688:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6699:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6684:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6684:18:1"
                        },
                        {
                          "hexValue": "657373",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "6704:5:1",
                          "type": "",
                          "value": "ess"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6677:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6677:33:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6677:33:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "6719:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "6731:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6742:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "6727:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6727:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6719:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "6504:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "6518:4:1",
                  "type": ""
                }
              ],
              "src": "6353:399:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6931:228:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "6948:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6959:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6941:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6941:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6941:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6982:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6993:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6978:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6978:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6998:2:1",
                          "type": "",
                          "value": "38"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6971:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6971:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6971:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7021:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7032:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7017:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7017:18:1"
                        },
                        {
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "7037:34:1",
                          "type": "",
                          "value": "ERC20: transfer amount exceeds b"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7010:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7010:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7010:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7092:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7103:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7088:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7088:18:1"
                        },
                        {
                          "hexValue": "616c616e6365",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "7108:8:1",
                          "type": "",
                          "value": "alance"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7081:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7081:36:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7081:36:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "7126:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "7138:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7149:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "7134:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7134:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7126:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "6908:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "6922:4:1",
                  "type": ""
                }
              ],
              "src": "6757:402:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "7338:223:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "7355:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7366:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7348:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7348:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7348:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7389:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7400:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7385:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7385:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7405:2:1",
                          "type": "",
                          "value": "33"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7378:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7378:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7378:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7428:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7439:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7424:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7424:18:1"
                        },
                        {
                          "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "7444:34:1",
                          "type": "",
                          "value": "ERC20: burn from the zero addres"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7417:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7417:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7417:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7499:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7510:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7495:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7495:18:1"
                        },
                        {
                          "hexValue": "73",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "7515:3:1",
                          "type": "",
                          "value": "s"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7488:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7488:31:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7488:31:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "7528:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "7540:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7551:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "7536:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7536:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7528:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "7315:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "7329:4:1",
                  "type": ""
                }
              ],
              "src": "7164:397:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "7740:224:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "7757:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7768:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7750:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7750:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7750:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7791:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7802:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7787:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7787:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7807:2:1",
                          "type": "",
                          "value": "34"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7780:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7780:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7780:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7830:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7841:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7826:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7826:18:1"
                        },
                        {
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "7846:34:1",
                          "type": "",
                          "value": "ERC20: burn amount exceeds balan"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7819:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7819:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7819:62:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7901:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7912:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7897:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7897:18:1"
                        },
                        {
                          "hexValue": "6365",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "7917:4:1",
                          "type": "",
                          "value": "ce"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7890:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7890:32:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7890:32:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "7931:27:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "7943:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7954:3:1",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "7939:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7939:19:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7931:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "7717:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "7731:4:1",
                  "type": ""
                }
              ],
              "src": "7566:398:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "8143:182:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "8160:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8171:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "8153:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8153:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8153:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8194:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8205:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8190:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8190:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8210:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "8183:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8183:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8183:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8233:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8244:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8229:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8229:18:1"
                        },
                        {
                          "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "8249:34:1",
                          "type": "",
                          "value": "Ownable: caller is not the owner"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "8222:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8222:62:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8222:62:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "8293:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "8305:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8316:2:1",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "8301:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8301:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8293:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "8120:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "8134:4:1",
                  "type": ""
                }
              ],
              "src": "7969:356:1"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "8504:181:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "8521:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8532:2:1",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "8514:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8514:21:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8514:21:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8555:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8566:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8551:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8551:18:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8571:2:1",
                          "type": "",
                          "value": "31"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "8544:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8544:30:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8544:30:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8594:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8605:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8590:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8590:18:1"
                        },
                        {
                          "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "8610:33:1",
                          "type": "",
                          "value": "ERC20: mint to the zero address"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "8583:6:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8583:61:1"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8583:61:1"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "8653:26:1",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "8665:9:1"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8676:2:1",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "8661:3:1"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8661:18:1"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8653:4:1"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "8481:9:1",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "8495:4:1",
                  "type": ""
                }
              ],
              "src": "8330:355:1"
            }
          ]
        },
        "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
        "id": 1,
        "language": "Yul",
        "name": "#utility.yul"
      }
    ],
    "sourceMap": "21124:910:0:-:0;;;21204:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21308:5;21314:7;6361:5;:13;21308:5;6361;:13;:::i;:::-;-1:-1:-1;6384:7:0;:17;6394:7;6384;:17;:::i;:::-;;6295:113;;19378:32;19397:12;:10;;;:12;;;:::i;:::-;19378:18;;;;:32;:::i;:::-;21332:27:::1;21338:10;21349:9:::0;21332:5:::1;;::::0;::::1;:27;:::i;:::-;-1:-1:-1::0;21369:14:0::1;:32:::0;;-1:-1:-1;;;;;;21369:32:0::1;-1:-1:-1::0;;;;;21369:32:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;21124:910:0;;-1:-1:-1;21124:910:0;4188:96;4267:10;;4188:96::o;20875:187::-;20967:6;;;-1:-1:-1;;;;;20983:17:0;;;-1:-1:-1;;;;;;20983:17:0;;;;;;;21015:40;;20967:6;;;20983:17;20967:6;;21015:40;;20948:16;;21015:40;20938:124;20875:187;:::o;12886:535::-;-1:-1:-1;;;;;12969:21:0;;12961:65;;;;;;;4713:2:1;12961:65:0;;;4695:21:1;4752:2;4732:18;;;4725:30;4791:33;4771:18;;;4764:61;4842:18;;12961:65:0;;;;;;;;13037:49;13066:1;13070:7;13079:6;13037:20;;;;:49;:::i;:::-;13113:6;13097:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13265:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;13318:37;5301:25:1;;;13318:37:0;;5274:18:1;13318:37:0;;;;;;;13366:48;13394:1;13398:7;13407:6;13366:19;;;;:48;:::i;:::-;12886:535;;:::o;16499:121::-;;;;:::o;14:184:1:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:840;257:5;310:3;303:4;295:6;291:17;287:27;277:55;;328:1;325;318:12;277:55;357:6;351:13;-1:-1:-1;;;;;420:2:1;416;413:10;410:36;;;426:18;;:::i;:::-;501:2;495:9;469:2;555:13;;-1:-1:-1;;551:22:1;;;575:2;547:31;543:40;531:53;;;599:18;;;619:22;;;596:46;593:72;;;645:18;;:::i;:::-;685:10;681:2;674:22;720:2;712:6;705:18;742:4;732:14;;787:3;782:2;777;769:6;765:15;761:24;758:33;755:53;;;804:1;801;794:12;755:53;826:1;817:10;;836:133;850:2;847:1;844:9;836:133;;;938:14;;;934:23;;928:30;907:14;;;903:23;;896:63;861:10;;;;836:133;;;1011:1;989:15;;;985:24;;;978:35;;;;993:6;203:840;-1:-1:-1;;;;203:840:1:o;1048:791::-;1165:6;1173;1181;1189;1242:3;1230:9;1221:7;1217:23;1213:33;1210:53;;;1259:1;1256;1249:12;1210:53;1292:9;1286:16;-1:-1:-1;;;;;1362:2:1;1354:6;1351:14;1348:34;;;1378:1;1375;1368:12;1348:34;1401:61;1454:7;1445:6;1434:9;1430:22;1401:61;:::i;:::-;1391:71;;1508:2;1497:9;1493:18;1487:25;1471:41;;1537:2;1527:8;1524:16;1521:36;;;1553:1;1550;1543:12;1521:36;;1576:63;1631:7;1620:8;1609:9;1605:24;1576:63;:::i;:::-;1682:2;1667:18;;1661:25;1566:73;;-1:-1:-1;1661:25:1;-1:-1:-1;;;;;;1715:31:1;;1705:42;;1695:70;;1761:1;1758;1751:12;1695:70;1829:2;1814:18;;;;1808:25;1048:791;;;;-1:-1:-1;;;1048:791:1:o;1844:437::-;1929:1;1919:12;;1976:1;1966:12;;;1987:61;;2041:4;2033:6;2029:17;2019:27;;1987:61;2094:2;2086:6;2083:14;2063:18;2060:38;2057:218;;2131:77;2128:1;2121:88;2232:4;2229:1;2222:15;2260:4;2257:1;2250:15;2057:218;;1844:437;;;:::o;2412:551::-;2514:2;2509:3;2506:11;2503:454;;;2550:1;2575:5;2571:2;2564:17;2620:4;2616:2;2606:19;2692:4;2687:2;2675:10;2671:19;2667:30;2661:4;2657:41;2729:4;2717:10;2714:20;2711:47;;;-1:-1:-1;2752:4:1;2711:47;2809:4;2804:2;2799:3;2795:12;2791:23;2785:4;2781:34;2771:44;;2865:82;2883:2;2876:5;2873:13;2865:82;;;2928:17;;;2909:1;2898:13;2865:82;;;2869:3;;;2412:551;;;:::o;3147:1359::-;3273:3;3267:10;-1:-1:-1;;;;;3292:6:1;3289:30;3286:56;;;3322:18;;:::i;:::-;3351:97;3441:6;3401:38;3433:4;3427:11;3401:38;:::i;:::-;3395:4;3351:97;:::i;:::-;3503:4;;3567:2;3556:14;;3584:1;3579:670;;;;4293:1;4310:6;4307:89;;;-1:-1:-1;4362:19:1;;;4356:26;4307:89;3128:1;3124:11;;;3111:1;3107:11;;3100:19;;;-1:-1:-1;;3088:32:1;3084:37;3074:48;;3071:65;4416:4;4409:81;;3549:951;;3579:670;2359:1;2352:14;;;2396:4;2383:18;;-1:-1:-1;;3615:20:1;;;3733:236;3747:7;3744:1;3741:14;3733:236;;;3836:19;;;3830:26;3815:42;;3928:27;;;;3896:1;3884:14;;;;3763:19;;3733:236;;;3737:3;3997:6;3988:7;3985:19;3982:208;;;4058:19;;;4052:26;4152:1;4167:2;4155:15;;4148:23;4145:1;4141:31;-1:-1:-1;;4129:44:1;4125:49;4110:65;4095:81;;3982:208;-1:-1:-1;;;;;4232:1:1;4220:14;4236:1;4216:22;4203:36;;-1:-1:-1;3147:1359:1:o;4871:279::-;4936:9;;;4957:10;;;4954:190;;;5000:77;4997:1;4990:88;5101:4;5098:1;5091:15;5129:4;5126:1;5119:15;4954:190;4871:279;;;;:::o;5155:177::-;21124:910:0;;;;;;",
    "deployedSourceMap": "21124:910:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6473:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8750:197;;;;;;:::i;:::-;;:::i;:::-;;;1192:14:1;;1185:22;1167:41;;1155:2;1140:18;8750:197:0;1027:187:1;7561:106:0;7648:12;;7561:106;;;1365:25:1;;;1353:2;1338:18;7561:106:0;1219:177:1;9509:286:0;;;;;;:::i;:::-;;:::i;7410:91::-;;;7492:2;1876:36:1;;1864:2;1849:18;7410:91:0;1734:184:1;10190:234:0;;;;;;:::i;:::-;;:::i;17893:89::-;;;;;;:::i;:::-;;:::i;:::-;;7725:125;;;;;;:::i;:::-;-1:-1:-1;;;;;7825:18:0;7799:7;7825:18;;;;;;;;;;;;7725:125;20273:101;;;:::i;18288:161::-;;;;;;:::i;:::-;;:::i;21530:67::-;;;;;;:::i;:::-;;:::i;19643:85::-;19715:6;;19643:85;;-1:-1:-1;;;;;19715:6:0;;;2445:74:1;;2433:2;2418:18;19643:85:0;2299:226:1;6684:102:0;;;:::i;21429:84::-;;;;;;:::i;:::-;;:::i;10911:427::-;;;;;;:::i;:::-;;:::i;8046:189::-;;;;;;:::i;:::-;;:::i;21693:339::-;;;;;;:::i;:::-;;:::i;8293:149::-;;;;;;:::i;:::-;;:::i;20523:198::-;;;;;;:::i;:::-;;:::i;6473:98::-;6527:13;6559:5;6552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6473:98;:::o;8750:197::-;8833:4;4267:10;8887:32;4267:10;8903:7;8912:6;8887:8;:32::i;:::-;8936:4;8929:11;;;8750:197;;;;;:::o;9509:286::-;9636:4;4267:10;9692:38;9708:4;4267:10;9723:6;9692:15;:38::i;:::-;9740:27;9750:4;9756:2;9760:6;9740:9;:27::i;:::-;-1:-1:-1;9784:4:0;;9509:286;-1:-1:-1;;;;9509:286:0:o;10190:234::-;10278:4;4267:10;10332:64;4267:10;10348:7;10385:10;10357:25;4267:10;10348:7;10357:9;:25::i;:::-;:38;;;;:::i;:::-;10332:8;:64::i;17893:89::-;17948:27;4267:10;17968:6;17948:5;:27::i;:::-;17893:89;:::o;20273:101::-;19536:13;:11;:13::i;:::-;20337:30:::1;20364:1;20337:18;:30::i;:::-;20273:101::o:0;18288:161::-;18364:46;18380:7;4267:10;18403:6;18364:15;:46::i;:::-;18420:22;18426:7;18435:6;18420:5;:22::i;:::-;18288:161;;:::o;21530:67::-;21579:12;21584:6;21579:4;:12::i;6684:102::-;6740:13;6772:7;6765:14;;;;;:::i;21429:84::-;19536:13;:11;:13::i;:::-;21485:21:::1;21491:10;21502:3;21485:5;:21::i;10911:427::-:0;11004:4;4267:10;11004:4;11085:25;4267:10;11102:7;11085:9;:25::i;:::-;11058:52;;11148:15;11128:16;:35;;11120:85;;;;-1:-1:-1;;;;;11120:85:0;;3758:2:1;11120:85:0;;;3740:21:1;3797:2;3777:18;;;3770:30;3836:34;3816:18;;;3809:62;3907:7;3887:18;;;3880:35;3932:19;;11120:85:0;;;;;;;;;11239:60;11248:5;11255:7;11283:15;11264:16;:34;11239:8;:60::i;8046:189::-;8125:4;4267:10;8179:28;4267:10;8196:2;8200:6;8179:9;:28::i;21693:339::-;21764:19;21786:10;21793:3;21786:5;:10;:::i;:::-;21764:32;-1:-1:-1;21835:18:0;21840:12;21851:1;21764:32;21840:12;:::i;21835:18::-;21921:14;;21905:45;;21915:4;;-1:-1:-1;;;;;21921:14:0;21937:12;21948:1;21937:10;:12;:::i;:::-;21905:9;:45::i;:::-;21984:42;21994:4;22000:2;22012:12;22023:1;22012:10;:12;:::i;:::-;22004:20;;:5;:20;:::i;21984:42::-;21758:274;21693:339;;;:::o;8293:149::-;-1:-1:-1;;;;;8408:18:0;;;8382:7;8408:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8293:149::o;20523:198::-;19536:13;:11;:13::i;:::-;-1:-1:-1;;;;;20611:22:0;::::1;20603:73;;;::::0;-1:-1:-1;;;;;20603:73:0;;4576:2:1;20603:73:0::1;::::0;::::1;4558:21:1::0;4615:2;4595:18;;;4588:30;4654:34;4634:18;;;4627:62;4725:8;4705:18;;;4698:36;4751:19;;20603:73:0::1;4374:402:1::0;20603:73:0::1;20686:28;20705:8;20686:18;:28::i;14823:370::-:0;-1:-1:-1;;;;;14954:19:0;;14946:68;;;;-1:-1:-1;;;;;14946:68:0;;4983:2:1;14946:68:0;;;4965:21:1;5022:2;5002:18;;;4995:30;5061:34;5041:18;;;5034:62;5132:6;5112:18;;;5105:34;5156:19;;14946:68:0;4781:400:1;14946:68:0;-1:-1:-1;;;;;15032:21:0;;15024:68;;;;-1:-1:-1;;;;;15024:68:0;;5388:2:1;15024:68:0;;;5370:21:1;5427:2;5407:18;;;5400:30;5466:34;5446:18;;;5439:62;5537:4;5517:18;;;5510:32;5559:19;;15024:68:0;5186:398:1;15024:68:0;-1:-1:-1;;;;;15103:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15154:32;;1365:25:1;;;15154:32:0;;1338:18:1;15154:32:0;;;;;;;;14823:370;;;:::o;15474:441::-;15604:24;15631:25;15641:5;15648:7;15631:9;:25::i;:::-;15604:52;;-1:-1:-1;;15670:16:0;:37;15666:243;;15751:6;15731:16;:26;;15723:68;;;;-1:-1:-1;;;;;15723:68:0;;5791:2:1;15723:68:0;;;5773:21:1;5830:2;5810:18;;;5803:30;5869:31;5849:18;;;5842:59;5918:18;;15723:68:0;5589:353:1;15723:68:0;15833:51;15842:5;15849:7;15877:6;15858:16;:25;15833:8;:51::i;11792:818::-;-1:-1:-1;;;;;11918:18:0;;11910:68;;;;-1:-1:-1;;;;;11910:68:0;;6149:2:1;11910:68:0;;;6131:21:1;6188:2;6168:18;;;6161:30;6227:34;6207:18;;;6200:62;6298:7;6278:18;;;6271:35;6323:19;;11910:68:0;5947:401:1;11910:68:0;-1:-1:-1;;;;;11996:16:0;;11988:64;;;;-1:-1:-1;;;;;11988:64:0;;6555:2:1;11988:64:0;;;6537:21:1;6594:2;6574:18;;;6567:30;6633:34;6613:18;;;6606:62;6704:5;6684:18;;;6677:33;6727:19;;11988:64:0;6353:399:1;11988:64:0;-1:-1:-1;;;;;12134:15:0;;12112:19;12134:15;;;;;;;;;;;12167:21;;;;12159:72;;;;-1:-1:-1;;;;;12159:72:0;;6959:2:1;12159:72:0;;;6941:21:1;6998:2;6978:18;;;6971:30;7037:34;7017:18;;;7010:62;7108:8;7088:18;;;7081:36;7134:19;;12159:72:0;6757:402:1;12159:72:0;-1:-1:-1;;;;;12265:15:0;;;:9;:15;;;;;;;;;;;12283:20;;;12265:38;;12480:13;;;;;;;;;;:23;;;;;;12529:26;;1365:25:1;;;12480:13:0;;12529:26;;1338:18:1;12529:26:0;;;;;;;12566:37;13741:659;;-1:-1:-1;;;;;13824:21:0;;13816:67;;;;-1:-1:-1;;;;;13816:67:0;;7366:2:1;13816:67:0;;;7348:21:1;7405:2;7385:18;;;7378:30;7444:34;7424:18;;;7417:62;7515:3;7495:18;;;7488:31;7536:19;;13816:67:0;7164:397:1;13816:67:0;-1:-1:-1;;;;;13979:18:0;;13954:22;13979:18;;;;;;;;;;;14015:24;;;;14007:71;;;;-1:-1:-1;;;;;14007:71:0;;7768:2:1;14007:71:0;;;7750:21:1;7807:2;7787:18;;;7780:30;7846:34;7826:18;;;7819:62;7917:4;7897:18;;;7890:32;7939:19;;14007:71:0;7566:398:1;14007:71:0;-1:-1:-1;;;;;14112:18:0;;:9;:18;;;;;;;;;;;14133:23;;;14112:44;;14249:12;:22;;;;;;;14297:37;1365:25:1;;;14112:9:0;;:18;14297:37;;1338:18:1;14297:37:0;1219:177:1;19801:130:0;19715:6;;-1:-1:-1;;;;;19715:6:0;4267:10;19864:23;19856:68;;;;-1:-1:-1;;;;;19856:68:0;;8171:2:1;19856:68:0;;;8153:21:1;;;8190:18;;;8183:30;8249:34;8229:18;;;8222:62;8301:18;;19856:68:0;7969:356:1;20875:187:0;20967:6;;;-1:-1:-1;;;;;20983:17:0;;;-1:-1:-1;;20983:17:0;;;;;;;21015:40;;20967:6;;;20983:17;20967:6;;21015:40;;20948:16;;21015:40;20938:124;20875:187;:::o;12886:535::-;-1:-1:-1;;;;;12969:21:0;;12961:65;;;;-1:-1:-1;;;;;12961:65:0;;8532:2:1;12961:65:0;;;8514:21:1;8571:2;8551:18;;;8544:30;8610:33;8590:18;;;8583:61;8661:18;;12961:65:0;8330:355:1;12961:65:0;13113:6;13097:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13265:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;13318:37;1365:25:1;;;13318:37:0;;1338:18:1;13318:37:0;;;;;;;18288:161;;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:196::-;635:20;;-1:-1:-1;;;;;684:54:1;;674:65;;664:93;;753:1;750;743:12;664:93;567:196;;;:::o;768:254::-;836:6;844;897:2;885:9;876:7;872:23;868:32;865:52;;;913:1;910;903:12;865:52;936:29;955:9;936:29;:::i;:::-;926:39;1012:2;997:18;;;;984:32;;-1:-1:-1;;;768:254:1:o;1401:328::-;1478:6;1486;1494;1547:2;1535:9;1526:7;1522:23;1518:32;1515:52;;;1563:1;1560;1553:12;1515:52;1586:29;1605:9;1586:29;:::i;:::-;1576:39;;1634:38;1668:2;1657:9;1653:18;1634:38;:::i;:::-;1624:48;;1719:2;1708:9;1704:18;1691:32;1681:42;;1401:328;;;;;:::o;1923:180::-;1982:6;2035:2;2023:9;2014:7;2010:23;2006:32;2003:52;;;2051:1;2048;2041:12;2003:52;-1:-1:-1;2074:23:1;;1923:180;-1:-1:-1;1923:180:1:o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;2108:186;-1:-1:-1;;;2108:186:1:o;2530:260::-;2598:6;2606;2659:2;2647:9;2638:7;2634:23;2630:32;2627:52;;;2675:1;2672;2665:12;2627:52;2698:29;2717:9;2698:29;:::i;:::-;2688:39;;2746:38;2780:2;2769:9;2765:18;2746:38;:::i;:::-;2736:48;;2530:260;;;;;:::o;2795:437::-;2880:1;2870:12;;2927:1;2917:12;;;2938:61;;2992:4;2984:6;2980:17;2970:27;;2938:61;3045:2;3037:6;3034:14;3014:18;3011:38;3008:218;;3082:77;3079:1;3072:88;3183:4;3180:1;3173:15;3211:4;3208:1;3201:15;3008:218;;2795:437;;;:::o;3237:184::-;3289:77;3286:1;3279:88;3386:4;3383:1;3376:15;3410:4;3407:1;3400:15;3426:125;3491:9;;;3512:10;;;3509:36;;;3525:18;;:::i;3962:274::-;4002:1;4028;4018:189;;4063:77;4060:1;4053:88;4164:4;4161:1;4154:15;4192:4;4189:1;4182:15;4018:189;-1:-1:-1;4221:9:1;;3962:274::o;4241:128::-;4308:9;;;4329:11;;;4326:37;;;4343:18;;:::i",
    "source": "// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/MyCoin.sol\n\npragma solidity 0.8.19;\n\n\n\ncontract MyCoin is ERC20,ERC20Burnable,Ownable{\n    address commissionAddr;\n    constructor(string memory name_, string memory symbol_,address commissionAddr_,uint256 _totalNum) ERC20(name_,symbol_){\n        _mint(msg.sender,_totalNum);\n        commissionAddr = commissionAddr_;\n    }\n    //项目方\n    function mint(uint256 num) external onlyOwner {\n        _mint(msg.sender,num);\n    }\n    //销毁\n   function burnToken(uint256 amount) external{\n    burn(amount);\n   }\n   //支持交易收取手续费 到项目方配置的地址 支持交易销毁部分代币\n   function transfer(address from,address to,uint256 value) external{\n    uint256  commission = value /200;\n    //销毁一定数量的token\n    burn(commission/2);\n    //收取手续费到项目方指定地址\n    _transfer(from, commissionAddr, commission/2);\n    //转账到指定账户\n    _transfer(from, to, value - commission/2 );\n   }\n}\n",
    "sourcePath": "/Users/zorro/smartcontractWorkRoot/contract/ERC20_Learing/contracts/MyCoin.sol",
    "ast": {
      "absolutePath": "project:/contracts/MyCoin.sol",
      "exportedSymbols": {
        "Context": [
          121
        ],
        "ERC20": [
          704
        ],
        "ERC20Burnable": [
          745
        ],
        "IERC20": [
          77
        ],
        "IERC20Metadata": [
          100
        ],
        "MyCoin": [
          956
        ],
        "Ownable": [
          856
        ]
      },
      "id": 957,
      "license": "MIT",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 1,
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "163:23:0"
        },
        {
          "abstract": false,
          "baseContracts": [],
          "canonicalName": "IERC20",
          "contractDependencies": [],
          "contractKind": "interface",
          "documentation": {
            "id": 2,
            "nodeType": "StructuredDocumentation",
            "src": "188:70:0",
            "text": " @dev Interface of the ERC20 standard as defined in the EIP."
          },
          "fullyImplemented": false,
          "id": 77,
          "linearizedBaseContracts": [
            77
          ],
          "name": "IERC20",
          "nameLocation": "269:6:0",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "anonymous": false,
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "282:158:0",
                "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
              },
              "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
              "id": 11,
              "name": "Transfer",
              "nameLocation": "451:8:0",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 10,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 5,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "476:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 11,
                    "src": "460:20:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 4,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "460:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 7,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "498:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 11,
                    "src": "482:18:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 6,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "482:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 9,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "510:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 11,
                    "src": "502:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 8,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "502:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "459:57:0"
              },
              "src": "445:72:0"
            },
            {
              "anonymous": false,
              "documentation": {
                "id": 12,
                "nodeType": "StructuredDocumentation",
                "src": "523:148:0",
                "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
              },
              "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "id": 20,
              "name": "Approval",
              "nameLocation": "682:8:0",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 19,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 14,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "707:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 20,
                    "src": "691:21:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 13,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "691:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 16,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "730:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 20,
                    "src": "714:23:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 15,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "714:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 18,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "747:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 20,
                    "src": "739:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 17,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "739:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "690:63:0"
              },
              "src": "676:78:0"
            },
            {
              "documentation": {
                "id": 21,
                "nodeType": "StructuredDocumentation",
                "src": "760:66:0",
                "text": " @dev Returns the amount of tokens in existence."
              },
              "functionSelector": "18160ddd",
              "id": 26,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "totalSupply",
              "nameLocation": "840:11:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 22,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "851:2:0"
              },
              "returnParameters": {
                "id": 25,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 24,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 26,
                    "src": "877:7:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 23,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "877:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "876:9:0"
              },
              "scope": 77,
              "src": "831:55:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 27,
                "nodeType": "StructuredDocumentation",
                "src": "892:72:0",
                "text": " @dev Returns the amount of tokens owned by `account`."
              },
              "functionSelector": "70a08231",
              "id": 34,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "balanceOf",
              "nameLocation": "978:9:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 30,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 29,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "996:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 34,
                    "src": "988:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 28,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "988:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "987:17:0"
              },
              "returnParameters": {
                "id": 33,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 32,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 34,
                    "src": "1028:7:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 31,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1028:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1027:9:0"
              },
              "scope": 77,
              "src": "969:68:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 35,
                "nodeType": "StructuredDocumentation",
                "src": "1043:202:0",
                "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
              },
              "functionSelector": "a9059cbb",
              "id": 44,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "transfer",
              "nameLocation": "1259:8:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 40,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 37,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "1276:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 44,
                    "src": "1268:10:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 36,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1268:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 39,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "1288:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 44,
                    "src": "1280:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 38,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1280:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1267:28:0"
              },
              "returnParameters": {
                "id": 43,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 42,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 44,
                    "src": "1314:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 41,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1314:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1313:6:0"
              },
              "scope": 77,
              "src": "1250:70:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 45,
                "nodeType": "StructuredDocumentation",
                "src": "1326:264:0",
                "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
              },
              "functionSelector": "dd62ed3e",
              "id": 54,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "allowance",
              "nameLocation": "1604:9:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 50,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 47,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "1622:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 54,
                    "src": "1614:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 46,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1614:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 49,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "1637:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 54,
                    "src": "1629:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 48,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1629:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1613:32:0"
              },
              "returnParameters": {
                "id": 53,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 52,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 54,
                    "src": "1669:7:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 51,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1669:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1668:9:0"
              },
              "scope": 77,
              "src": "1595:83:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 55,
                "nodeType": "StructuredDocumentation",
                "src": "1684:642:0",
                "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
              },
              "functionSelector": "095ea7b3",
              "id": 64,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "approve",
              "nameLocation": "2340:7:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 60,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 57,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "2356:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 64,
                    "src": "2348:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 56,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2348:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 59,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "2373:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 64,
                    "src": "2365:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 58,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2365:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2347:33:0"
              },
              "returnParameters": {
                "id": 63,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 62,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 64,
                    "src": "2399:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 61,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2399:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2398:6:0"
              },
              "scope": 77,
              "src": "2331:74:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 65,
                "nodeType": "StructuredDocumentation",
                "src": "2411:287:0",
                "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
              },
              "functionSelector": "23b872dd",
              "id": 76,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "transferFrom",
              "nameLocation": "2712:12:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 72,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 67,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "2742:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 76,
                    "src": "2734:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 66,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2734:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 69,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "2764:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 76,
                    "src": "2756:10:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 68,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2756:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 71,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "2784:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 76,
                    "src": "2776:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 70,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2776:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2724:72:0"
              },
              "returnParameters": {
                "id": 75,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 74,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 76,
                    "src": "2815:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 73,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2815:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2814:6:0"
              },
              "scope": 77,
              "src": "2703:118:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 957,
          "src": "259:2564:0",
          "usedErrors": []
        },
        {
          "id": 78,
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "2979:23:0"
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 80,
                "name": "IERC20",
                "nameLocations": [
                  "3149:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 77,
                "src": "3149:6:0"
              },
              "id": 81,
              "nodeType": "InheritanceSpecifier",
              "src": "3149:6:0"
            }
          ],
          "canonicalName": "IERC20Metadata",
          "contractDependencies": [],
          "contractKind": "interface",
          "documentation": {
            "id": 79,
            "nodeType": "StructuredDocumentation",
            "src": "3004:116:0",
            "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
          },
          "fullyImplemented": false,
          "id": 100,
          "linearizedBaseContracts": [
            100,
            77
          ],
          "name": "IERC20Metadata",
          "nameLocation": "3131:14:0",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "documentation": {
                "id": 82,
                "nodeType": "StructuredDocumentation",
                "src": "3162:54:0",
                "text": " @dev Returns the name of the token."
              },
              "functionSelector": "06fdde03",
              "id": 87,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "name",
              "nameLocation": "3230:4:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 83,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3234:2:0"
              },
              "returnParameters": {
                "id": 86,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 85,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 87,
                    "src": "3260:13:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 84,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3260:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3259:15:0"
              },
              "scope": 100,
              "src": "3221:54:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 88,
                "nodeType": "StructuredDocumentation",
                "src": "3281:56:0",
                "text": " @dev Returns the symbol of the token."
              },
              "functionSelector": "95d89b41",
              "id": 93,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "symbol",
              "nameLocation": "3351:6:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 89,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3357:2:0"
              },
              "returnParameters": {
                "id": 92,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 91,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 93,
                    "src": "3383:13:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 90,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3383:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3382:15:0"
              },
              "scope": 100,
              "src": "3342:56:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "documentation": {
                "id": 94,
                "nodeType": "StructuredDocumentation",
                "src": "3404:65:0",
                "text": " @dev Returns the decimals places of the token."
              },
              "functionSelector": "313ce567",
              "id": 99,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nameLocation": "3483:8:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 95,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3491:2:0"
              },
              "returnParameters": {
                "id": 98,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 97,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 99,
                    "src": "3517:5:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 96,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "3517:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3516:7:0"
              },
              "scope": 100,
              "src": "3474:50:0",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 957,
          "src": "3121:405:0",
          "usedErrors": []
        },
        {
          "id": 101,
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "3634:23:0"
        },
        {
          "abstract": true,
          "baseContracts": [],
          "canonicalName": "Context",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 102,
            "nodeType": "StructuredDocumentation",
            "src": "3659:496:0",
            "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
          },
          "fullyImplemented": true,
          "id": 121,
          "linearizedBaseContracts": [
            121
          ],
          "name": "Context",
          "nameLocation": "4174:7:0",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "body": {
                "id": 110,
                "nodeType": "Block",
                "src": "4250:34:0",
                "statements": [
                  {
                    "expression": {
                      "expression": {
                        "id": 107,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4267:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4271:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4267:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 106,
                    "id": 109,
                    "nodeType": "Return",
                    "src": "4260:17:0"
                  }
                ]
              },
              "id": 111,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_msgSender",
              "nameLocation": "4197:10:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 103,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4207:2:0"
              },
              "returnParameters": {
                "id": 106,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 105,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 111,
                    "src": "4241:7:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 104,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4241:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4240:9:0"
              },
              "scope": 121,
              "src": "4188:96:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 119,
                "nodeType": "Block",
                "src": "4357:32:0",
                "statements": [
                  {
                    "expression": {
                      "expression": {
                        "id": 116,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4374:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4378:4:0",
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "src": "4374:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "functionReturnParameters": 115,
                    "id": 118,
                    "nodeType": "Return",
                    "src": "4367:15:0"
                  }
                ]
              },
              "id": 120,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_msgData",
              "nameLocation": "4299:8:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 112,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4307:2:0"
              },
              "returnParameters": {
                "id": 115,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 114,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 120,
                    "src": "4341:14:0",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 113,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4341:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4340:16:0"
              },
              "scope": 121,
              "src": "4290:99:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "internal"
            }
          ],
          "scope": 957,
          "src": "4156:235:0",
          "usedErrors": []
        },
        {
          "id": 122,
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "4522:23:0"
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 124,
                "name": "Context",
                "nameLocations": [
                  "5738:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 121,
                "src": "5738:7:0"
              },
              "id": 125,
              "nodeType": "InheritanceSpecifier",
              "src": "5738:7:0"
            },
            {
              "baseName": {
                "id": 126,
                "name": "IERC20",
                "nameLocations": [
                  "5747:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 77,
                "src": "5747:6:0"
              },
              "id": 127,
              "nodeType": "InheritanceSpecifier",
              "src": "5747:6:0"
            },
            {
              "baseName": {
                "id": 128,
                "name": "IERC20Metadata",
                "nameLocations": [
                  "5755:14:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 100,
                "src": "5755:14:0"
              },
              "id": 129,
              "nodeType": "InheritanceSpecifier",
              "src": "5755:14:0"
            }
          ],
          "canonicalName": "ERC20",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 123,
            "nodeType": "StructuredDocumentation",
            "src": "4549:1170:0",
            "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
          },
          "fullyImplemented": true,
          "id": 704,
          "linearizedBaseContracts": [
            704,
            100,
            77,
            121
          ],
          "name": "ERC20",
          "nameLocation": "5729:5:0",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 133,
              "mutability": "mutable",
              "name": "_balances",
              "nameLocation": "5812:9:0",
              "nodeType": "VariableDeclaration",
              "scope": 704,
              "src": "5776:45:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "typeName": {
                "id": 132,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 130,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5784:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "5776:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 131,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5795:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 139,
              "mutability": "mutable",
              "name": "_allowances",
              "nameLocation": "5884:11:0",
              "nodeType": "VariableDeclaration",
              "scope": 704,
              "src": "5828:67:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "typeName": {
                "id": 138,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 134,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5836:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "5828:47:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 137,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5855:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "5847:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5866:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 141,
              "mutability": "mutable",
              "name": "_totalSupply",
              "nameLocation": "5918:12:0",
              "nodeType": "VariableDeclaration",
              "scope": 704,
              "src": "5902:28:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 140,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5902:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 143,
              "mutability": "mutable",
              "name": "_name",
              "nameLocation": "5952:5:0",
              "nodeType": "VariableDeclaration",
              "scope": 704,
              "src": "5937:20:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 142,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5937:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 145,
              "mutability": "mutable",
              "name": "_symbol",
              "nameLocation": "5978:7:0",
              "nodeType": "VariableDeclaration",
              "scope": 704,
              "src": "5963:22:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 144,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5963:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "visibility": "private"
            },
            {
              "body": {
                "id": 161,
                "nodeType": "Block",
                "src": "6351:57:0",
                "statements": [
                  {
                    "expression": {
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 153,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "6361:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 154,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "6369:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "6361:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 156,
                    "nodeType": "ExpressionStatement",
                    "src": "6361:13:0"
                  },
                  {
                    "expression": {
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 157,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "6384:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 158,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "6394:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "6384:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 160,
                    "nodeType": "ExpressionStatement",
                    "src": "6384:17:0"
                  }
                ]
              },
              "documentation": {
                "id": 146,
                "nodeType": "StructuredDocumentation",
                "src": "5992:298:0",
                "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
              },
              "id": 162,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 151,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 148,
                    "mutability": "mutable",
                    "name": "name_",
                    "nameLocation": "6321:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 162,
                    "src": "6307:19:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 147,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6307:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 150,
                    "mutability": "mutable",
                    "name": "symbol_",
                    "nameLocation": "6342:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 162,
                    "src": "6328:21:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 149,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6328:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6306:44:0"
              },
              "returnParameters": {
                "id": 152,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6351:0:0"
              },
              "scope": 704,
              "src": "6295:113:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                87
              ],
              "body": {
                "id": 171,
                "nodeType": "Block",
                "src": "6542:29:0",
                "statements": [
                  {
                    "expression": {
                      "id": 169,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "6559:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 168,
                    "id": 170,
                    "nodeType": "Return",
                    "src": "6552:12:0"
                  }
                ]
              },
              "documentation": {
                "id": 163,
                "nodeType": "StructuredDocumentation",
                "src": "6414:54:0",
                "text": " @dev Returns the name of the token."
              },
              "functionSelector": "06fdde03",
              "id": 172,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "name",
              "nameLocation": "6482:4:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 165,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "6509:8:0"
              },
              "parameters": {
                "id": 164,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6486:2:0"
              },
              "returnParameters": {
                "id": 168,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 167,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 172,
                    "src": "6527:13:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 166,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6527:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6526:15:0"
              },
              "scope": 704,
              "src": "6473:98:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                93
              ],
              "body": {
                "id": 181,
                "nodeType": "Block",
                "src": "6755:31:0",
                "statements": [
                  {
                    "expression": {
                      "id": 179,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "6772:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 178,
                    "id": 180,
                    "nodeType": "Return",
                    "src": "6765:14:0"
                  }
                ]
              },
              "documentation": {
                "id": 173,
                "nodeType": "StructuredDocumentation",
                "src": "6577:102:0",
                "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
              },
              "functionSelector": "95d89b41",
              "id": 182,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "symbol",
              "nameLocation": "6693:6:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 175,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "6722:8:0"
              },
              "parameters": {
                "id": 174,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6699:2:0"
              },
              "returnParameters": {
                "id": 178,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 177,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 182,
                    "src": "6740:13:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 176,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6740:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6739:15:0"
              },
              "scope": 704,
              "src": "6684:102:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                99
              ],
              "body": {
                "id": 191,
                "nodeType": "Block",
                "src": "7475:26:0",
                "statements": [
                  {
                    "expression": {
                      "hexValue": "3138",
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7492:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "functionReturnParameters": 188,
                    "id": 190,
                    "nodeType": "Return",
                    "src": "7485:9:0"
                  }
                ]
              },
              "documentation": {
                "id": 183,
                "nodeType": "StructuredDocumentation",
                "src": "6792:613:0",
                "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "functionSelector": "313ce567",
              "id": 192,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nameLocation": "7419:8:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 185,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "7450:8:0"
              },
              "parameters": {
                "id": 184,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "7427:2:0"
              },
              "returnParameters": {
                "id": 188,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 187,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 192,
                    "src": "7468:5:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 186,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "7468:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7467:7:0"
              },
              "scope": 704,
              "src": "7410:91:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                26
              ],
              "body": {
                "id": 201,
                "nodeType": "Block",
                "src": "7631:36:0",
                "statements": [
                  {
                    "expression": {
                      "id": 199,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "7648:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 198,
                    "id": 200,
                    "nodeType": "Return",
                    "src": "7641:19:0"
                  }
                ]
              },
              "documentation": {
                "id": 193,
                "nodeType": "StructuredDocumentation",
                "src": "7507:49:0",
                "text": " @dev See {IERC20-totalSupply}."
              },
              "functionSelector": "18160ddd",
              "id": 202,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "totalSupply",
              "nameLocation": "7570:11:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 195,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "7604:8:0"
              },
              "parameters": {
                "id": 194,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "7581:2:0"
              },
              "returnParameters": {
                "id": 198,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 197,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 202,
                    "src": "7622:7:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 196,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7621:9:0"
              },
              "scope": 704,
              "src": "7561:106:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                34
              ],
              "body": {
                "id": 215,
                "nodeType": "Block",
                "src": "7808:42:0",
                "statements": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 211,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "7825:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 213,
                      "indexExpression": {
                        "id": 212,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "7835:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7825:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 210,
                    "id": 214,
                    "nodeType": "Return",
                    "src": "7818:25:0"
                  }
                ]
              },
              "documentation": {
                "id": 203,
                "nodeType": "StructuredDocumentation",
                "src": "7673:47:0",
                "text": " @dev See {IERC20-balanceOf}."
              },
              "functionSelector": "70a08231",
              "id": 216,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "balanceOf",
              "nameLocation": "7734:9:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 207,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "7781:8:0"
              },
              "parameters": {
                "id": 206,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 205,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "7752:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 216,
                    "src": "7744:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 204,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7744:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7743:17:0"
              },
              "returnParameters": {
                "id": 210,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 209,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 216,
                    "src": "7799:7:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 208,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7799:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "7798:9:0"
              },
              "scope": 704,
              "src": "7725:125:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                44
              ],
              "body": {
                "id": 240,
                "nodeType": "Block",
                "src": "8131:104:0",
                "statements": [
                  {
                    "assignments": [
                      228
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8149:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "8141:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8141:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 231,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 229,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "8157:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8157:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8141:28:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 233,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "8189:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 234,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "8196:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 235,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "8200:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 232,
                        "name": "_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "8179:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8179:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 237,
                    "nodeType": "ExpressionStatement",
                    "src": "8179:28:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8224:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 226,
                    "id": 239,
                    "nodeType": "Return",
                    "src": "8217:11:0"
                  }
                ]
              },
              "documentation": {
                "id": 217,
                "nodeType": "StructuredDocumentation",
                "src": "7856:185:0",
                "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
              },
              "functionSelector": "a9059cbb",
              "id": 241,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "transfer",
              "nameLocation": "8055:8:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 223,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "8107:8:0"
              },
              "parameters": {
                "id": 222,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 219,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "8072:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 241,
                    "src": "8064:10:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 218,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8064:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 221,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "8084:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 241,
                    "src": "8076:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 220,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8076:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8063:28:0"
              },
              "returnParameters": {
                "id": 226,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 225,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 241,
                    "src": "8125:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 224,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8125:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8124:6:0"
              },
              "scope": 704,
              "src": "8046:189:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                54
              ],
              "body": {
                "id": 258,
                "nodeType": "Block",
                "src": "8391:51:0",
                "statements": [
                  {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 252,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "8408:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 254,
                        "indexExpression": {
                          "id": 253,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "8420:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8408:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 256,
                      "indexExpression": {
                        "id": 255,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "8427:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8408:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 251,
                    "id": 257,
                    "nodeType": "Return",
                    "src": "8401:34:0"
                  }
                ]
              },
              "documentation": {
                "id": 242,
                "nodeType": "StructuredDocumentation",
                "src": "8241:47:0",
                "text": " @dev See {IERC20-allowance}."
              },
              "functionSelector": "dd62ed3e",
              "id": 259,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "allowance",
              "nameLocation": "8302:9:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 248,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "8364:8:0"
              },
              "parameters": {
                "id": 247,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 244,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "8320:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 259,
                    "src": "8312:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 243,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8312:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 246,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "8335:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 259,
                    "src": "8327:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 245,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8327:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8311:32:0"
              },
              "returnParameters": {
                "id": 251,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 250,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 259,
                    "src": "8382:7:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 249,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8382:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8381:9:0"
              },
              "scope": 704,
              "src": "8293:149:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                64
              ],
              "body": {
                "id": 283,
                "nodeType": "Block",
                "src": "8839:108:0",
                "statements": [
                  {
                    "assignments": [
                      271
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8857:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "8849:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8849:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 274,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 272,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "8865:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8865:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8849:28:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 276,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "8896:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 277,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "8903:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 278,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "8912:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 275,
                        "name": "_approve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "8887:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8887:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 280,
                    "nodeType": "ExpressionStatement",
                    "src": "8887:32:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8936:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 269,
                    "id": 282,
                    "nodeType": "Return",
                    "src": "8929:11:0"
                  }
                ]
              },
              "documentation": {
                "id": 260,
                "nodeType": "StructuredDocumentation",
                "src": "8448:297:0",
                "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
              },
              "functionSelector": "095ea7b3",
              "id": 284,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "approve",
              "nameLocation": "8759:7:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 266,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "8815:8:0"
              },
              "parameters": {
                "id": 265,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 262,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "8775:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 284,
                    "src": "8767:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 261,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8767:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 264,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "8792:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 284,
                    "src": "8784:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 263,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8784:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8766:33:0"
              },
              "returnParameters": {
                "id": 269,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 268,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 284,
                    "src": "8833:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 267,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8833:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8832:6:0"
              },
              "scope": 704,
              "src": "8750:197:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                76
              ],
              "body": {
                "id": 316,
                "nodeType": "Block",
                "src": "9642:153:0",
                "statements": [
                  {
                    "assignments": [
                      298
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9660:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "9652:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9652:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 301,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 299,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "9670:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9670:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9652:30:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 303,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "9708:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 304,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "9714:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 305,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "9723:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 302,
                        "name": "_spendAllowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "9692:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9692:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 307,
                    "nodeType": "ExpressionStatement",
                    "src": "9692:38:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 309,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "9750:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 310,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "9756:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 311,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "9760:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 308,
                        "name": "_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "9740:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9740:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 313,
                    "nodeType": "ExpressionStatement",
                    "src": "9740:27:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9784:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 296,
                    "id": 315,
                    "nodeType": "Return",
                    "src": "9777:11:0"
                  }
                ]
              },
              "documentation": {
                "id": 285,
                "nodeType": "StructuredDocumentation",
                "src": "8953:551:0",
                "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
              },
              "functionSelector": "23b872dd",
              "id": 317,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "transferFrom",
              "nameLocation": "9518:12:0",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 293,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "9618:8:0"
              },
              "parameters": {
                "id": 292,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 287,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "9548:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 317,
                    "src": "9540:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 286,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9540:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 289,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "9570:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 317,
                    "src": "9562:10:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 288,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9562:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 291,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "9590:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 317,
                    "src": "9582:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 290,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9582:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "9530:72:0"
              },
              "returnParameters": {
                "id": 296,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 295,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 317,
                    "src": "9636:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 294,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "9636:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "9635:6:0"
              },
              "scope": 704,
              "src": "9509:286:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 345,
                "nodeType": "Block",
                "src": "10284:140:0",
                "statements": [
                  {
                    "assignments": [
                      328
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10302:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "10294:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10294:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 331,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 329,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "10310:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10310:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10294:28:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 333,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "10341:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 334,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 320,
                          "src": "10348:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 336,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "10367:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 337,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "10374:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 335,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "10357:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10357:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 339,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "10385:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10357:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 332,
                        "name": "_approve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "10332:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10332:64:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 342,
                    "nodeType": "ExpressionStatement",
                    "src": "10332:64:0"
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10413:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 326,
                    "id": 344,
                    "nodeType": "Return",
                    "src": "10406:11:0"
                  }
                ]
              },
              "documentation": {
                "id": 318,
                "nodeType": "StructuredDocumentation",
                "src": "9801:384:0",
                "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
              },
              "functionSelector": "39509351",
              "id": 346,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "increaseAllowance",
              "nameLocation": "10199:17:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 323,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 320,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "10225:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 346,
                    "src": "10217:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 319,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10217:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 322,
                    "mutability": "mutable",
                    "name": "addedValue",
                    "nameLocation": "10242:10:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 346,
                    "src": "10234:18:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 321,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10234:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10216:37:0"
              },
              "returnParameters": {
                "id": 326,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 325,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 346,
                    "src": "10278:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 324,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "10278:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10277:6:0"
              },
              "scope": 704,
              "src": "10190:234:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 386,
                "nodeType": "Block",
                "src": "11010:328:0",
                "statements": [
                  {
                    "assignments": [
                      357
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "11028:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "11020:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11020:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 360,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 358,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "11036:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11036:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11020:28:0"
                  },
                  {
                    "assignments": [
                      362
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "11066:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "11058:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11058:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 367,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 364,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "11095:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 365,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "11102:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 363,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "11085:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view returns (uint256)"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11085:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11058:52:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 369,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "11128:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 370,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "11148:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11128:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11165:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                            "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                          },
                          "value": "ERC20: decreased allowance below zero"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                            "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                          }
                        ],
                        "id": 368,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "11120:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11120:85:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 374,
                    "nodeType": "ExpressionStatement",
                    "src": "11120:85:0"
                  },
                  {
                    "id": 383,
                    "nodeType": "UncheckedBlock",
                    "src": "11215:95:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 376,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "11248:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 377,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "11255:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 378,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 362,
                                "src": "11264:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 379,
                                "name": "subtractedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "11283:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11264:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 375,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "11239:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11239:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 382,
                        "nodeType": "ExpressionStatement",
                        "src": "11239:60:0"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11327:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 355,
                    "id": 385,
                    "nodeType": "Return",
                    "src": "11320:11:0"
                  }
                ]
              },
              "documentation": {
                "id": 347,
                "nodeType": "StructuredDocumentation",
                "src": "10430:476:0",
                "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
              },
              "functionSelector": "a457c2d7",
              "id": 387,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "decreaseAllowance",
              "nameLocation": "10920:17:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 352,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 349,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "10946:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 387,
                    "src": "10938:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 348,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10938:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 351,
                    "mutability": "mutable",
                    "name": "subtractedValue",
                    "nameLocation": "10963:15:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 387,
                    "src": "10955:23:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 350,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10955:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10937:42:0"
              },
              "returnParameters": {
                "id": 355,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 354,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 387,
                    "src": "11004:4:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 353,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "11004:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "11003:6:0"
              },
              "scope": 704,
              "src": "10911:427:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 463,
                "nodeType": "Block",
                "src": "11900:710:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 398,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "11918:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11934:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11926:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 399,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11926:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11926:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11918:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11938:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                            "typeString": "literal_string \"ERC20: transfer from the zero address\""
                          },
                          "value": "ERC20: transfer from the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                            "typeString": "literal_string \"ERC20: transfer from the zero address\""
                          }
                        ],
                        "id": 397,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "11910:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11910:68:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 406,
                    "nodeType": "ExpressionStatement",
                    "src": "11910:68:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 408,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 392,
                            "src": "11996:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12010:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12002:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 409,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12002:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12002:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11996:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12014:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                            "typeString": "literal_string \"ERC20: transfer to the zero address\""
                          },
                          "value": "ERC20: transfer to the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                            "typeString": "literal_string \"ERC20: transfer to the zero address\""
                          }
                        ],
                        "id": 407,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "11988:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11988:64:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 416,
                    "nodeType": "ExpressionStatement",
                    "src": "11988:64:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 418,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "12084:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 419,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "12090:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 420,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "12094:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 417,
                        "name": "_beforeTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "12063:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12063:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 422,
                    "nodeType": "ExpressionStatement",
                    "src": "12063:38:0"
                  },
                  {
                    "assignments": [
                      424
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "fromBalance",
                        "nameLocation": "12120:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "12112:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12112:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 428,
                    "initialValue": {
                      "baseExpression": {
                        "id": 425,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "12134:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 427,
                      "indexExpression": {
                        "id": 426,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "12144:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12134:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12112:37:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 430,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "12167:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 431,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "12182:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12167:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12190:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "id": 429,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "12159:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12159:72:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 435,
                    "nodeType": "ExpressionStatement",
                    "src": "12159:72:0"
                  },
                  {
                    "id": 450,
                    "nodeType": "UncheckedBlock",
                    "src": "12241:273:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 436,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "12265:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 438,
                            "indexExpression": {
                              "id": 437,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "12275:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12265:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 439,
                              "name": "fromBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "12283:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 440,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "12297:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12283:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12265:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 443,
                        "nodeType": "ExpressionStatement",
                        "src": "12265:38:0"
                      },
                      {
                        "expression": {
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 444,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "12480:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 446,
                            "indexExpression": {
                              "id": 445,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 392,
                              "src": "12490:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12480:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 447,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "12497:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12480:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "12480:23:0"
                      }
                    ]
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 452,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "12538:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 453,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "12544:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 454,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "12548:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 451,
                        "name": "Transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "12529:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12529:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 456,
                    "nodeType": "EmitStatement",
                    "src": "12524:31:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 458,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "12586:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 459,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "12592:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 460,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "12596:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 457,
                        "name": "_afterTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "12566:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12566:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 462,
                    "nodeType": "ExpressionStatement",
                    "src": "12566:37:0"
                  }
                ]
              },
              "documentation": {
                "id": 388,
                "nodeType": "StructuredDocumentation",
                "src": "11344:443:0",
                "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
              },
              "id": 464,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_transfer",
              "nameLocation": "11801:9:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 395,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 390,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "11828:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 464,
                    "src": "11820:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 389,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11820:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 392,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "11850:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 464,
                    "src": "11842:10:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 391,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11842:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 394,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "11870:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 464,
                    "src": "11862:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 393,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11862:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "11810:72:0"
              },
              "returnParameters": {
                "id": 396,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "11900:0:0"
              },
              "scope": 704,
              "src": "11792:818:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 520,
                "nodeType": "Block",
                "src": "12951:470:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 473,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "12969:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12988:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12980:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 474,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12980:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12980:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12969:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12992:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                            "typeString": "literal_string \"ERC20: mint to the zero address\""
                          },
                          "value": "ERC20: mint to the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                            "typeString": "literal_string \"ERC20: mint to the zero address\""
                          }
                        ],
                        "id": 472,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "12961:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12961:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 481,
                    "nodeType": "ExpressionStatement",
                    "src": "12961:65:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13066:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13058:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 483,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13058:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13058:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 487,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "13070:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 488,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "13079:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 482,
                        "name": "_beforeTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "13037:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13037:49:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 490,
                    "nodeType": "ExpressionStatement",
                    "src": "13037:49:0"
                  },
                  {
                    "expression": {
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 491,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "13097:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 492,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "13113:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13097:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 494,
                    "nodeType": "ExpressionStatement",
                    "src": "13097:22:0"
                  },
                  {
                    "id": 501,
                    "nodeType": "UncheckedBlock",
                    "src": "13129:175:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 495,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "13265:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 497,
                            "indexExpression": {
                              "id": 496,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 467,
                              "src": "13275:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13265:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 498,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "13287:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13265:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 500,
                        "nodeType": "ExpressionStatement",
                        "src": "13265:28:0"
                      }
                    ]
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13335:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13327:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 503,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13327:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13327:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 507,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "13339:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 508,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "13348:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 502,
                        "name": "Transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "13318:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13318:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 510,
                    "nodeType": "EmitStatement",
                    "src": "13313:42:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13394:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13386:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 512,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13386:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13386:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 516,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "13398:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 517,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "13407:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 511,
                        "name": "_afterTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "13366:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13366:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 519,
                    "nodeType": "ExpressionStatement",
                    "src": "13366:48:0"
                  }
                ]
              },
              "documentation": {
                "id": 465,
                "nodeType": "StructuredDocumentation",
                "src": "12616:265:0",
                "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
              },
              "id": 521,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_mint",
              "nameLocation": "12895:5:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 470,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 467,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "12909:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 521,
                    "src": "12901:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 466,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12901:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 469,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "12926:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 521,
                    "src": "12918:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 468,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12918:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "12900:33:0"
              },
              "returnParameters": {
                "id": 471,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "12951:0:0"
              },
              "scope": 704,
              "src": "12886:535:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 592,
                "nodeType": "Block",
                "src": "13806:594:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 530,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "13824:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13843:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13835:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 531,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13835:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13835:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13824:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13847:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                            "typeString": "literal_string \"ERC20: burn from the zero address\""
                          },
                          "value": "ERC20: burn from the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                            "typeString": "literal_string \"ERC20: burn from the zero address\""
                          }
                        ],
                        "id": 529,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "13816:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13816:67:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 538,
                    "nodeType": "ExpressionStatement",
                    "src": "13816:67:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 540,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "13915:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13932:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13924:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 541,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13924:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13924:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 545,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "13936:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 539,
                        "name": "_beforeTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "13894:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13894:49:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 547,
                    "nodeType": "ExpressionStatement",
                    "src": "13894:49:0"
                  },
                  {
                    "assignments": [
                      549
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "accountBalance",
                        "nameLocation": "13962:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "13954:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13954:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 553,
                    "initialValue": {
                      "baseExpression": {
                        "id": 550,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "13979:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 552,
                      "indexExpression": {
                        "id": 551,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "13989:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13979:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13954:43:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 555,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "14015:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 556,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "14033:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14015:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14041:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "id": 554,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "14007:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14007:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 560,
                    "nodeType": "ExpressionStatement",
                    "src": "14007:71:0"
                  },
                  {
                    "id": 573,
                    "nodeType": "UncheckedBlock",
                    "src": "14088:194:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 561,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "14112:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 563,
                            "indexExpression": {
                              "id": 562,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "14122:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14112:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 564,
                              "name": "accountBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 549,
                              "src": "14133:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 565,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 526,
                              "src": "14150:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14133:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14112:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 568,
                        "nodeType": "ExpressionStatement",
                        "src": "14112:44:0"
                      },
                      {
                        "expression": {
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 569,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "14249:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 570,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "14265:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14249:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 572,
                        "nodeType": "ExpressionStatement",
                        "src": "14249:22:0"
                      }
                    ]
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 575,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "14306:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14323:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14315:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 576,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14315:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14315:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 580,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "14327:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 574,
                        "name": "Transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "14297:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14297:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 582,
                    "nodeType": "EmitStatement",
                    "src": "14292:42:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 584,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "14365:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14382:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14374:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 585,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14374:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14374:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 589,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "14386:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 583,
                        "name": "_afterTokenTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "14345:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14345:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 591,
                    "nodeType": "ExpressionStatement",
                    "src": "14345:48:0"
                  }
                ]
              },
              "documentation": {
                "id": 522,
                "nodeType": "StructuredDocumentation",
                "src": "13427:309:0",
                "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
              },
              "id": 593,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_burn",
              "nameLocation": "13750:5:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 527,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 524,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "13764:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 593,
                    "src": "13756:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 523,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13756:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 526,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "13781:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 593,
                    "src": "13773:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 525,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "13755:33:0"
              },
              "returnParameters": {
                "id": 528,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "13806:0:0"
              },
              "scope": 704,
              "src": "13741:659:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 637,
                "nodeType": "Block",
                "src": "14936:257:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 604,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "14954:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14971:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14963:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 605,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14963:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14963:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14954:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14975:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                            "typeString": "literal_string \"ERC20: approve from the zero address\""
                          },
                          "value": "ERC20: approve from the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                            "typeString": "literal_string \"ERC20: approve from the zero address\""
                          }
                        ],
                        "id": 603,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "14946:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14946:68:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 612,
                    "nodeType": "ExpressionStatement",
                    "src": "14946:68:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 598,
                            "src": "15032:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15051:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15043:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15043:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15043:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15032:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15055:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                            "typeString": "literal_string \"ERC20: approve to the zero address\""
                          },
                          "value": "ERC20: approve to the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                            "typeString": "literal_string \"ERC20: approve to the zero address\""
                          }
                        ],
                        "id": 613,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "15024:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15024:68:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 622,
                    "nodeType": "ExpressionStatement",
                    "src": "15024:68:0"
                  },
                  {
                    "expression": {
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 623,
                            "name": "_allowances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "15103:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 626,
                          "indexExpression": {
                            "id": 624,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "15115:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15103:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 627,
                        "indexExpression": {
                          "id": 625,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 598,
                          "src": "15122:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "15103:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 628,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "15133:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15103:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 630,
                    "nodeType": "ExpressionStatement",
                    "src": "15103:36:0"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 632,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "15163:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 633,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 598,
                          "src": "15170:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 634,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 600,
                          "src": "15179:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 631,
                        "name": "Approval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "15154:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15154:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 636,
                    "nodeType": "EmitStatement",
                    "src": "15149:37:0"
                  }
                ]
              },
              "documentation": {
                "id": 594,
                "nodeType": "StructuredDocumentation",
                "src": "14406:412:0",
                "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
              },
              "id": 638,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_approve",
              "nameLocation": "14832:8:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 601,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 596,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "14858:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 638,
                    "src": "14850:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 595,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14850:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 598,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "14881:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 638,
                    "src": "14873:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 597,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14873:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 600,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "14906:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 638,
                    "src": "14898:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 599,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14898:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "14840:78:0"
              },
              "returnParameters": {
                "id": 602,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "14936:0:0"
              },
              "scope": 704,
              "src": "14823:370:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 680,
                "nodeType": "Block",
                "src": "15594:321:0",
                "statements": [
                  {
                    "assignments": [
                      649
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 649,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "15612:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "15604:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15604:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 654,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 651,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 641,
                          "src": "15641:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 652,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "15648:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 650,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "15631:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view returns (uint256)"
                        }
                      },
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15631:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15604:52:0"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 655,
                        "name": "currentAllowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "15670:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15695:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 657,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15695:7:0",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 656,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "15690:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15690:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15704:3:0",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "15690:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15670:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 679,
                    "nodeType": "IfStatement",
                    "src": "15666:243:0",
                    "trueBody": {
                      "id": 678,
                      "nodeType": "Block",
                      "src": "15709:200:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 663,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 649,
                                  "src": "15731:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 664,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 645,
                                  "src": "15751:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15731:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                                "id": 666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15759:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                  "typeString": "literal_string \"ERC20: insufficient allowance\""
                                },
                                "value": "ERC20: insufficient allowance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                  "typeString": "literal_string \"ERC20: insufficient allowance\""
                                }
                              ],
                              "id": 662,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "15723:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15723:68:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 668,
                          "nodeType": "ExpressionStatement",
                          "src": "15723:68:0"
                        },
                        {
                          "id": 677,
                          "nodeType": "UncheckedBlock",
                          "src": "15805:94:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 670,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 641,
                                    "src": "15842:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 671,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 643,
                                    "src": "15849:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 672,
                                      "name": "currentAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 649,
                                      "src": "15858:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 673,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 645,
                                      "src": "15877:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15858:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 669,
                                  "name": "_approve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 638,
                                  "src": "15833:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15833:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 676,
                              "nodeType": "ExpressionStatement",
                              "src": "15833:51:0"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 639,
                "nodeType": "StructuredDocumentation",
                "src": "15199:270:0",
                "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
              },
              "id": 681,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_spendAllowance",
              "nameLocation": "15483:15:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 646,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 641,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "15516:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 681,
                    "src": "15508:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 640,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15508:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 643,
                    "mutability": "mutable",
                    "name": "spender",
                    "nameLocation": "15539:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 681,
                    "src": "15531:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 642,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15531:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 645,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "15564:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 681,
                    "src": "15556:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 644,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15556:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "15498:78:0"
              },
              "returnParameters": {
                "id": 647,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "15594:0:0"
              },
              "scope": 704,
              "src": "15474:441:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 691,
                "nodeType": "Block",
                "src": "16618:2:0",
                "statements": []
              },
              "documentation": {
                "id": 682,
                "nodeType": "StructuredDocumentation",
                "src": "15921:573:0",
                "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
              },
              "id": 692,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_beforeTokenTransfer",
              "nameLocation": "16508:20:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 689,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 684,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "16546:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 692,
                    "src": "16538:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 683,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "16538:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 686,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "16568:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 692,
                    "src": "16560:10:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 685,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "16560:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 688,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "16588:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 692,
                    "src": "16580:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 687,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16580:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16528:72:0"
              },
              "returnParameters": {
                "id": 690,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16618:0:0"
              },
              "scope": 704,
              "src": "16499:121:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 702,
                "nodeType": "Block",
                "src": "17326:2:0",
                "statements": []
              },
              "documentation": {
                "id": 693,
                "nodeType": "StructuredDocumentation",
                "src": "16626:577:0",
                "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
              },
              "id": 703,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_afterTokenTransfer",
              "nameLocation": "17217:19:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 700,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 695,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "17254:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 703,
                    "src": "17246:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 694,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "17246:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 697,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "17276:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 703,
                    "src": "17268:10:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 696,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "17268:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 699,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "17296:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 703,
                    "src": "17288:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 698,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17288:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "17236:72:0"
              },
              "returnParameters": {
                "id": 701,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "17326:0:0"
              },
              "scope": 704,
              "src": "17208:120:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            }
          ],
          "scope": 957,
          "src": "5720:11610:0",
          "usedErrors": []
        },
        {
          "id": 705,
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "17499:23:0"
        },
        {
          "abstract": true,
          "baseContracts": [
            {
              "baseName": {
                "id": 707,
                "name": "Context",
                "nameLocations": [
                  "17769:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 121,
                "src": "17769:7:0"
              },
              "id": 708,
              "nodeType": "InheritanceSpecifier",
              "src": "17769:7:0"
            },
            {
              "baseName": {
                "id": 709,
                "name": "ERC20",
                "nameLocations": [
                  "17778:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 704,
                "src": "17778:5:0"
              },
              "id": 710,
              "nodeType": "InheritanceSpecifier",
              "src": "17778:5:0"
            }
          ],
          "canonicalName": "ERC20Burnable",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 706,
            "nodeType": "StructuredDocumentation",
            "src": "17525:208:0",
            "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
          },
          "fullyImplemented": true,
          "id": 745,
          "linearizedBaseContracts": [
            745,
            704,
            100,
            77,
            121
          ],
          "name": "ERC20Burnable",
          "nameLocation": "17752:13:0",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "body": {
                "id": 722,
                "nodeType": "Block",
                "src": "17938:44:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 717,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "17954:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17954:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 719,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 713,
                          "src": "17968:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 716,
                        "name": "_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "17948:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17948:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 721,
                    "nodeType": "ExpressionStatement",
                    "src": "17948:27:0"
                  }
                ]
              },
              "documentation": {
                "id": 711,
                "nodeType": "StructuredDocumentation",
                "src": "17790:98:0",
                "text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
              },
              "functionSelector": "42966c68",
              "id": 723,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "burn",
              "nameLocation": "17902:4:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 714,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 713,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "17915:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 723,
                    "src": "17907:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 712,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17907:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "17906:16:0"
              },
              "returnParameters": {
                "id": 715,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "17938:0:0"
              },
              "scope": 745,
              "src": "17893:89:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 743,
                "nodeType": "Block",
                "src": "18354:95:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 732,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 726,
                          "src": "18380:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 733,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "18389:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18389:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 735,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "18403:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 731,
                        "name": "_spendAllowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "18364:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18364:46:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 737,
                    "nodeType": "ExpressionStatement",
                    "src": "18364:46:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 739,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 726,
                          "src": "18426:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 740,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "18435:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 738,
                        "name": "_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "18420:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18420:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 742,
                    "nodeType": "ExpressionStatement",
                    "src": "18420:22:0"
                  }
                ]
              },
              "documentation": {
                "id": 724,
                "nodeType": "StructuredDocumentation",
                "src": "17988:295:0",
                "text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
              },
              "functionSelector": "79cc6790",
              "id": 744,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "burnFrom",
              "nameLocation": "18297:8:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 729,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 726,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "18314:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 744,
                    "src": "18306:15:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 725,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "18306:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 728,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "18331:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 744,
                    "src": "18323:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 727,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18323:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "18305:33:0"
              },
              "returnParameters": {
                "id": 730,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "18354:0:0"
              },
              "scope": 745,
              "src": "18288:161:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            }
          ],
          "scope": 957,
          "src": "17734:717:0",
          "usedErrors": []
        },
        {
          "id": 746,
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "18576:23:0"
        },
        {
          "abstract": true,
          "baseContracts": [
            {
              "baseName": {
                "id": 748,
                "name": "Context",
                "nameLocations": [
                  "19125:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 121,
                "src": "19125:7:0"
              },
              "id": 749,
              "nodeType": "InheritanceSpecifier",
              "src": "19125:7:0"
            }
          ],
          "canonicalName": "Ownable",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 747,
            "nodeType": "StructuredDocumentation",
            "src": "18601:494:0",
            "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
          },
          "fullyImplemented": true,
          "id": 856,
          "linearizedBaseContracts": [
            856,
            121
          ],
          "name": "Ownable",
          "nameLocation": "19114:7:0",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 751,
              "mutability": "mutable",
              "name": "_owner",
              "nameLocation": "19155:6:0",
              "nodeType": "VariableDeclaration",
              "scope": 856,
              "src": "19139:22:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 750,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "19139:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "private"
            },
            {
              "anonymous": false,
              "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "id": 757,
              "name": "OwnershipTransferred",
              "nameLocation": "19174:20:0",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 756,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 753,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "previousOwner",
                    "nameLocation": "19211:13:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 757,
                    "src": "19195:29:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 752,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19195:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 755,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "newOwner",
                    "nameLocation": "19242:8:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 757,
                    "src": "19226:24:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 754,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19226:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "19194:57:0"
              },
              "src": "19168:84:0"
            },
            {
              "body": {
                "id": 766,
                "nodeType": "Block",
                "src": "19368:49:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 762,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "19397:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19397:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 761,
                        "name": "_transferOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "19378:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19378:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 765,
                    "nodeType": "ExpressionStatement",
                    "src": "19378:32:0"
                  }
                ]
              },
              "documentation": {
                "id": 758,
                "nodeType": "StructuredDocumentation",
                "src": "19258:91:0",
                "text": " @dev Initializes the contract setting the deployer as the initial owner."
              },
              "id": 767,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 759,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "19365:2:0"
              },
              "returnParameters": {
                "id": 760,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "19368:0:0"
              },
              "scope": 856,
              "src": "19354:63:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 774,
                "nodeType": "Block",
                "src": "19526:41:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 770,
                        "name": "_checkOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "19536:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$__$",
                          "typeString": "function () view"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19536:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 772,
                    "nodeType": "ExpressionStatement",
                    "src": "19536:13:0"
                  },
                  {
                    "id": 773,
                    "nodeType": "PlaceholderStatement",
                    "src": "19559:1:0"
                  }
                ]
              },
              "documentation": {
                "id": 768,
                "nodeType": "StructuredDocumentation",
                "src": "19423:77:0",
                "text": " @dev Throws if called by any account other than the owner."
              },
              "id": 775,
              "name": "onlyOwner",
              "nameLocation": "19514:9:0",
              "nodeType": "ModifierDefinition",
              "parameters": {
                "id": 769,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "19523:2:0"
              },
              "src": "19505:62:0",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 783,
                "nodeType": "Block",
                "src": "19698:30:0",
                "statements": [
                  {
                    "expression": {
                      "id": 781,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "19715:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 780,
                    "id": 782,
                    "nodeType": "Return",
                    "src": "19708:13:0"
                  }
                ]
              },
              "documentation": {
                "id": 776,
                "nodeType": "StructuredDocumentation",
                "src": "19573:65:0",
                "text": " @dev Returns the address of the current owner."
              },
              "functionSelector": "8da5cb5b",
              "id": 784,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "owner",
              "nameLocation": "19652:5:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 777,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "19657:2:0"
              },
              "returnParameters": {
                "id": 780,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 779,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 784,
                    "src": "19689:7:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 778,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19689:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "19688:9:0"
              },
              "scope": 856,
              "src": "19643:85:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 797,
                "nodeType": "Block",
                "src": "19846:85:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 789,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "19864:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19864:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 791,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "19875:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19875:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19864:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19889:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                            "typeString": "literal_string \"Ownable: caller is not the owner\""
                          },
                          "value": "Ownable: caller is not the owner"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                            "typeString": "literal_string \"Ownable: caller is not the owner\""
                          }
                        ],
                        "id": 788,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "19856:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19856:68:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 796,
                    "nodeType": "ExpressionStatement",
                    "src": "19856:68:0"
                  }
                ]
              },
              "documentation": {
                "id": 785,
                "nodeType": "StructuredDocumentation",
                "src": "19734:62:0",
                "text": " @dev Throws if the sender is not the owner."
              },
              "id": 798,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_checkOwner",
              "nameLocation": "19810:11:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 786,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "19821:2:0"
              },
              "returnParameters": {
                "id": 787,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "19846:0:0"
              },
              "scope": 856,
              "src": "19801:130:0",
              "stateMutability": "view",
              "virtual": true,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 811,
                "nodeType": "Block",
                "src": "20327:47:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20364:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20356:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 805,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20356:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20356:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 804,
                        "name": "_transferOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "20337:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20337:30:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 810,
                    "nodeType": "ExpressionStatement",
                    "src": "20337:30:0"
                  }
                ]
              },
              "documentation": {
                "id": 799,
                "nodeType": "StructuredDocumentation",
                "src": "19937:331:0",
                "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
              },
              "functionSelector": "715018a6",
              "id": 812,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 802,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 801,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "20317:9:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 775,
                    "src": "20317:9:0"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "20317:9:0"
                }
              ],
              "name": "renounceOwnership",
              "nameLocation": "20282:17:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 800,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "20299:2:0"
              },
              "returnParameters": {
                "id": 803,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "20327:0:0"
              },
              "scope": 856,
              "src": "20273:101:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 834,
                "nodeType": "Block",
                "src": "20593:128:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 821,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "20611:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20631:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20623:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 822,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20623:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20623:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "20611:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                          "id": 827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20635:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                            "typeString": "literal_string \"Ownable: new owner is the zero address\""
                          },
                          "value": "Ownable: new owner is the zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                            "typeString": "literal_string \"Ownable: new owner is the zero address\""
                          }
                        ],
                        "id": 820,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "20603:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20603:73:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 829,
                    "nodeType": "ExpressionStatement",
                    "src": "20603:73:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 831,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "20705:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 830,
                        "name": "_transferOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "20686:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20686:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 833,
                    "nodeType": "ExpressionStatement",
                    "src": "20686:28:0"
                  }
                ]
              },
              "documentation": {
                "id": 813,
                "nodeType": "StructuredDocumentation",
                "src": "20380:138:0",
                "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
              },
              "functionSelector": "f2fde38b",
              "id": 835,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 818,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 817,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "20583:9:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 775,
                    "src": "20583:9:0"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "20583:9:0"
                }
              ],
              "name": "transferOwnership",
              "nameLocation": "20532:17:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 816,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 815,
                    "mutability": "mutable",
                    "name": "newOwner",
                    "nameLocation": "20558:8:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 835,
                    "src": "20550:16:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 814,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20550:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "20549:18:0"
              },
              "returnParameters": {
                "id": 819,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "20593:0:0"
              },
              "scope": 856,
              "src": "20523:198:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            {
              "body": {
                "id": 854,
                "nodeType": "Block",
                "src": "20938:124:0",
                "statements": [
                  {
                    "assignments": [
                      842
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "oldOwner",
                        "nameLocation": "20956:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "20948:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20948:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 844,
                    "initialValue": {
                      "id": 843,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "20967:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "20948:25:0"
                  },
                  {
                    "expression": {
                      "id": 847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 845,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "20983:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 846,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "20992:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "20983:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 848,
                    "nodeType": "ExpressionStatement",
                    "src": "20983:17:0"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 850,
                          "name": "oldOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "21036:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 851,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 838,
                          "src": "21046:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 849,
                        "name": "OwnershipTransferred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "21015:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address)"
                        }
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21015:40:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 853,
                    "nodeType": "EmitStatement",
                    "src": "21010:45:0"
                  }
                ]
              },
              "documentation": {
                "id": 836,
                "nodeType": "StructuredDocumentation",
                "src": "20727:143:0",
                "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
              },
              "id": 855,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_transferOwnership",
              "nameLocation": "20884:18:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 839,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 838,
                    "mutability": "mutable",
                    "name": "newOwner",
                    "nameLocation": "20911:8:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 855,
                    "src": "20903:16:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 837,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20903:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "20902:18:0"
              },
              "returnParameters": {
                "id": 840,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "20938:0:0"
              },
              "scope": 856,
              "src": "20875:187:0",
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            }
          ],
          "scope": 957,
          "src": "19096:1968:0",
          "usedErrors": []
        },
        {
          "id": 857,
          "literals": [
            "solidity",
            "0.8",
            ".19"
          ],
          "nodeType": "PragmaDirective",
          "src": "21097:23:0"
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 858,
                "name": "ERC20",
                "nameLocations": [
                  "21143:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 704,
                "src": "21143:5:0"
              },
              "id": 859,
              "nodeType": "InheritanceSpecifier",
              "src": "21143:5:0"
            },
            {
              "baseName": {
                "id": 860,
                "name": "ERC20Burnable",
                "nameLocations": [
                  "21149:13:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 745,
                "src": "21149:13:0"
              },
              "id": 861,
              "nodeType": "InheritanceSpecifier",
              "src": "21149:13:0"
            },
            {
              "baseName": {
                "id": 862,
                "name": "Ownable",
                "nameLocations": [
                  "21163:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 856,
                "src": "21163:7:0"
              },
              "id": 863,
              "nodeType": "InheritanceSpecifier",
              "src": "21163:7:0"
            }
          ],
          "canonicalName": "MyCoin",
          "contractDependencies": [],
          "contractKind": "contract",
          "fullyImplemented": true,
          "id": 956,
          "linearizedBaseContracts": [
            956,
            856,
            745,
            704,
            100,
            77,
            121
          ],
          "name": "MyCoin",
          "nameLocation": "21133:6:0",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 865,
              "mutability": "mutable",
              "name": "commissionAddr",
              "nameLocation": "21184:14:0",
              "nodeType": "VariableDeclaration",
              "scope": 956,
              "src": "21176:22:0",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 864,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "21176:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            },
            {
              "body": {
                "id": 890,
                "nodeType": "Block",
                "src": "21322:86:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 881,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "21338:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21342:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21338:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 883,
                          "name": "_totalNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 873,
                          "src": "21349:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 880,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "21332:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21332:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 885,
                    "nodeType": "ExpressionStatement",
                    "src": "21332:27:0"
                  },
                  {
                    "expression": {
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 886,
                        "name": "commissionAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "21369:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 887,
                        "name": "commissionAddr_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "21386:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "21369:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 889,
                    "nodeType": "ExpressionStatement",
                    "src": "21369:32:0"
                  }
                ]
              },
              "id": 891,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [
                {
                  "arguments": [
                    {
                      "id": 876,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 867,
                      "src": "21308:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    {
                      "id": 877,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "21314:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    }
                  ],
                  "id": 878,
                  "kind": "baseConstructorSpecifier",
                  "modifierName": {
                    "id": 875,
                    "name": "ERC20",
                    "nameLocations": [
                      "21302:5:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 704,
                    "src": "21302:5:0"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "21302:20:0"
                }
              ],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 874,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 867,
                    "mutability": "mutable",
                    "name": "name_",
                    "nameLocation": "21230:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 891,
                    "src": "21216:19:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 866,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "21216:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 869,
                    "mutability": "mutable",
                    "name": "symbol_",
                    "nameLocation": "21251:7:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 891,
                    "src": "21237:21:0",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 868,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "21237:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 871,
                    "mutability": "mutable",
                    "name": "commissionAddr_",
                    "nameLocation": "21267:15:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 891,
                    "src": "21259:23:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 870,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21259:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 873,
                    "mutability": "mutable",
                    "name": "_totalNum",
                    "nameLocation": "21291:9:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 891,
                    "src": "21283:17:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 872,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21283:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "21215:86:0"
              },
              "returnParameters": {
                "id": 879,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "21322:0:0"
              },
              "scope": 956,
              "src": "21204:204:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 904,
                "nodeType": "Block",
                "src": "21475:38:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 899,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "21491:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21495:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21491:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 901,
                          "name": "num",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 893,
                          "src": "21502:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 898,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "21485:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21485:21:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 903,
                    "nodeType": "ExpressionStatement",
                    "src": "21485:21:0"
                  }
                ]
              },
              "functionSelector": "a0712d68",
              "id": 905,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 896,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 895,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "21465:9:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 775,
                    "src": "21465:9:0"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "21465:9:0"
                }
              ],
              "name": "mint",
              "nameLocation": "21438:4:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 894,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 893,
                    "mutability": "mutable",
                    "name": "num",
                    "nameLocation": "21451:3:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 905,
                    "src": "21443:11:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 892,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21443:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "21442:13:0"
              },
              "returnParameters": {
                "id": 897,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "21475:0:0"
              },
              "scope": 956,
              "src": "21429:84:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 914,
                "nodeType": "Block",
                "src": "21573:24:0",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 911,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "21584:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 910,
                        "name": "burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "21579:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21579:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 913,
                    "nodeType": "ExpressionStatement",
                    "src": "21579:12:0"
                  }
                ]
              },
              "functionSelector": "7b47ec1a",
              "id": 915,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "burnToken",
              "nameLocation": "21539:9:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 908,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 907,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "21557:6:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 915,
                    "src": "21549:14:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 906,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21549:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "21548:16:0"
              },
              "returnParameters": {
                "id": 909,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "21573:0:0"
              },
              "scope": 956,
              "src": "21530:67:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 954,
                "nodeType": "Block",
                "src": "21758:274:0",
                "statements": [
                  {
                    "assignments": [
                      925
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 925,
                        "mutability": "mutable",
                        "name": "commission",
                        "nameLocation": "21773:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "21764:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 924,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21764:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 929,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 926,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "21786:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "323030",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21793:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      },
                      "src": "21786:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "21764:32:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 931,
                            "name": "commission",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "21840:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21851:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "21840:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 930,
                        "name": "burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "21835:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21835:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 935,
                    "nodeType": "ExpressionStatement",
                    "src": "21835:18:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 937,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 917,
                          "src": "21915:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 938,
                          "name": "commissionAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 865,
                          "src": "21921:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 939,
                            "name": "commission",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "21937:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21948:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "21937:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 936,
                        "name": "_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "21905:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21905:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 943,
                    "nodeType": "ExpressionStatement",
                    "src": "21905:45:0"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 945,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 917,
                          "src": "21994:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 946,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "22000:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 947,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "22004:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 948,
                              "name": "commission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "22012:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22023:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "22012:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22004:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 944,
                        "name": "_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "21984:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21984:42:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 953,
                    "nodeType": "ExpressionStatement",
                    "src": "21984:42:0"
                  }
                ]
              },
              "functionSelector": "beabacc8",
              "id": 955,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "transfer",
              "nameLocation": "21702:8:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 922,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 917,
                    "mutability": "mutable",
                    "name": "from",
                    "nameLocation": "21719:4:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 955,
                    "src": "21711:12:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 916,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21711:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 919,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "21732:2:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 955,
                    "src": "21724:10:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 918,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21724:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 921,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "21743:5:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 955,
                    "src": "21735:13:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 920,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21735:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "21710:39:0"
              },
              "returnParameters": {
                "id": 923,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "21758:0:0"
              },
              "scope": 956,
              "src": "21693:339:0",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 957,
          "src": "21124:910:0",
          "usedErrors": []
        }
      ],
      "src": "163:21872:0"
    },
    "compiler": {
      "name": "solc",
      "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
    },
    "networks": {
      "5777": {
        "events": {},
        "links": {},
        "address": "0xD68076013Ac9097FCc2377eC5046FCF64A847b8e",
        "transactionHash": "0xd563cdcc7a000ef47064792d36095de6a0dfce59286291401ca385307159a87e"
      }
    },
    "schemaVersion": "3.4.13",
    "updatedAt": "2023-04-18T09:59:48.938Z",
    "networkType": "ethereum",
    "devdoc": {
      "events": {
        "Approval(address,address,uint256)": {
          "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
        },
        "Transfer(address,address,uint256)": {
          "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
        }
      },
      "kind": "dev",
      "methods": {
        "allowance(address,address)": {
          "details": "See {IERC20-allowance}."
        },
        "approve(address,uint256)": {
          "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
        },
        "balanceOf(address)": {
          "details": "See {IERC20-balanceOf}."
        },
        "burn(uint256)": {
          "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
        },
        "burnFrom(address,uint256)": {
          "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
        },
        "decimals()": {
          "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
        },
        "decreaseAllowance(address,uint256)": {
          "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
        },
        "increaseAllowance(address,uint256)": {
          "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
        },
        "name()": {
          "details": "Returns the name of the token."
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "symbol()": {
          "details": "Returns the symbol of the token, usually a shorter version of the name."
        },
        "totalSupply()": {
          "details": "See {IERC20-totalSupply}."
        },
        "transfer(address,uint256)": {
          "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
        },
        "transferFrom(address,address,uint256)": {
          "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  }